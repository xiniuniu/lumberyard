########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################


def build(bld):
    file_list = []

    implemented_platforms = ['win', 'darwin', 'android', 'ios']

    platform = bld.env['PLATFORM']

    if bld.env['PLATFORM'] == 'project_generator':
        file_list.append('cloudgemwebcommunicator.waf_files')
        file_list.append('lmbraws_unsupported.waf_files')
    else:
        if any(substring in platform for substring in implemented_platforms):
            file_list.append('cloudgemwebcommunicator.waf_files')
        else:
            file_list.append('lmbraws_unsupported.waf_files')  
                  
    bld.DefineGem(
        uselib          = ['AWS_CPP_SDK_COGNITO_IDENTITY','AWS_CPP_SDK_IDENTITY_MANAGEMENT','AWS_IOT_DEVICE', 'AWS_CPP_SDK_CORE'],
        win_lib         = ['gdi32','crypt32','ws2_32'],
        includes        = [bld.Path('Code/CryEngine/CryCommon'),
                           '3rdParty/IoTDevice',
                           '3rdParty/IoTDevice/network/WebSocket/wslay',
                           '3rdParty/IoTDevice/network/OpenSSL'
        ],
        clang_cxxflags  = ['-Wno-deprecated-declarations'],
        file_list = file_list,
        use = ['CloudGemFramework.StaticLibrary'],
        platforms = ['all']
    )
