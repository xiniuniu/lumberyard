{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "CloudCanvas": {
            "Id": "$Revision: #7 $"
        }
    },
    "Parameters": {
        "CloudCanvasStack": {
            "Default": "ResourceGroup",
            "Description": "Identifies this stack as a Lumberyard Cloud Canvas managed stack.",
            "Type": "String"
        },
        "ConfigurationBucket": {
            "Description": "Bucket that contains configuration data.",
            "Type": "String"
        },
        "ConfigurationKey": {
            "Description": "Location in the configuration bucket of configuration data.",
            "Type": "String"
        },
        "DeploymentName": {
            "Description": "Name of the resource group's deployment.",
            "Type": "String"
        },
        "DeploymentStackArn": {
            "Description": "ARN of the deployment stack that owns this resource group stack.",
            "Type": "String"
        },
        "MessageTableReadCapacityUnits": {
            "Default": "1",
            "Description": "Number of reads per second.",
            "Type": "Number"
        },
        "MessageTableWriteCapacityUnits": {
            "Default": "1",
            "Description": "Number of writes per second.",
            "Type": "Number"
        },
        "ProjectResourceHandler": {
            "Description": "Service token of the custom resource handler.",
            "Type": "String"
        },
        "ResourceGroupName": {
            "Description": "Name of the resource group.",
            "Type": "String"
        },
        "ServiceApiCacheClusterEnabled": {
            "Default": "false",
            "Description": "Indicates whether cache clustering is enabled for the service API.",
            "Type": "String"
        },
        "ServiceApiCacheClusterSize": {
            "Default": "0.5",
            "Description": "Indicates whether cache clustering is enabled for the service API.",
            "Type": "String"
        }
    },
    "Resources": {
        "AccessControl": {
            "Type": "Custom::AccessControl", 
            "Properties": {
                "ConfigurationKey": {
                    "Ref": "ConfigurationKey"
                }, 
                "ServiceToken": {
                    "Ref": "ProjectResourceHandler"
                }, 
                "ConfigurationBucket": {
                    "Ref": "ConfigurationBucket"
                }
            },
            "DependsOn": [ "MessageTable", "ServiceLambda", "ServiceApi" ]
        },
        "MessageTable": {
            "Metadata": {
                "CloudCanvas": {
                    "Permissions": [
                        {
                            "Action": ["dynamodb:GetItem", "dynamodb:Scan", "dynamodb:UpdateItem", "dynamodb:PutItem", "dynamodb:DeleteItem"],
                            "AbstractRole": "ServiceLambda"
                        }
                    ]
                }
            },
            "Properties": {
                "ServiceToken": {
                    "Ref": "ProjectResourceHandler"
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "UniqueMsgID",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "UniqueMsgID",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "MessageTableReadCapacityUnits"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "MessageTableWriteCapacityUnits"
                    }
                }
            },
            "Type": "Custom::DynamoDBTable"
        },
        "ServiceApi": {
            "Metadata": {
                "CloudCanvas": {
                    "Permissions": [
                        {
                            "AbstractRole": "Player",
                            "Action": "execute-api:Invoke",
                            "ResourceSuffix": [
                                "/api/GET/player/messages"
                            ]
                        },
                        {
                            "AbstractRole": "Server",
                            "Action": "execute-api:Invoke",
                            "ResourceSuffix": [
                                "/api/GET/player/messages"
                            ]
                        }
                    ]
                }
            },
            "Properties": {
                "CacheClusterEnabled": {
                    "Ref": "ServiceApiCacheClusterEnabled"
                },
                "CacheClusterSize": {
                    "Ref": "ServiceApiCacheClusterSize"
                },
                "ConfigurationBucket": {
                    "Ref": "ConfigurationBucket"
                },
                "ConfigurationKey": {
                    "Ref": "ConfigurationKey"
                },
                "MethodSettings": {
                },
                "ServiceToken": {
                    "Ref": "ProjectResourceHandler"
                },
                "SwaggerSettings": {
                    "ServiceLambdaArn": {
                        "Fn::GetAtt": [
                            "ServiceLambda",
                            "Arn"
                        ]
                    }
                }
            },
            "Type": "Custom::ServiceApi"
        },
        "ServiceLambda": {
            "Metadata": {
                "CloudCanvas": {
                    "Permissions": {
                        "AbstractRole": "ServiceApi",
                        "Action": "lambda:InvokeFunction"
                    }
                }
            },
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::GetAtt": [
                            "ServiceLambdaConfiguration",
                            "ConfigurationBucket"
                        ]
                    },
                    "S3Key": {
                        "Fn::GetAtt": [
                            "ServiceLambdaConfiguration",
                            "ConfigurationKey"
                        ]
                    }
                },
                "Handler": "cgf_lambda_service.dispatch",
                "Role": {
                    "Fn::GetAtt": [
                        "ServiceLambdaConfiguration",
                        "Role"
                    ]
                },
                "Environment": {
                    "Variables": {
                        "Fn::GetAtt": [
                            "ServiceLambdaConfiguration",
                            "CCSettings"
                        ]
                    }
                },
                "Runtime": {
                    "Fn::GetAtt": [
                        "ServiceLambdaConfiguration",
                        "Runtime"
                    ]
                },
                "Timeout": 10
            },
            "Type": "AWS::Lambda::Function"
        },
        "ServiceLambdaConfiguration": {
            "Properties": {
                "ConfigurationBucket": {
                    "Ref": "ConfigurationBucket"
                },
                "ConfigurationKey": {
                    "Ref": "ConfigurationKey"
                },
                "FunctionName": "ServiceLambda",
                "Runtime": "python2.7",
                "ServiceToken": {
                    "Ref": "ProjectResourceHandler"
                },
                "Settings": {
                    "MessageTable": {
                        "Ref": "MessageTable"
                    }
                }
            },
            "Type": "Custom::LambdaConfiguration"
        }
    }, 
    "Outputs": {
        "ServiceUrl": {
            "Description": "The service url.", 
            "Value": {
                "Fn::GetAtt": [
                    "ServiceApi", 
                    "Url"
                ]
            }
        }
    }
}
