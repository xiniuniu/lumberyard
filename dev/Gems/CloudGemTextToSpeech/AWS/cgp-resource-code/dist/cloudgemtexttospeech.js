!function(a){function b(a,b,c){a in i||(i[a]={name:a,declarative:!0,deps:b,declare:c,normalizedDeps:b})}function c(a){return m[a]||(m[a]={name:a,dependencies:[],exports:{},importers:[]})}function d(b){if(!b.module){var e=b.module=c(b.name),f=b.module.exports,g=b.declare.call(a,function(a,b){if(e.locked=!0,"object"==typeof a)for(var c in a)f[c]=a[c];else f[a]=b;for(var d=0,g=e.importers.length;g>d;d++){var h=e.importers[d];if(!h.locked)for(var i=0;i<h.dependencies.length;++i)h.dependencies[i]===e&&h.setters[i](f)}return e.locked=!1,b},b.name);e.setters=g.setters,e.execute=g.execute;for(var j=0,k=b.normalizedDeps.length;k>j;j++){var l,n=b.normalizedDeps[j],o=i[n],p=m[n];p?l=p.exports:o&&!o.declarative?l=o.esModule:o?(d(o),p=o.module,l=p.exports):l=h(n),p&&p.importers?(p.importers.push(e),e.dependencies.push(p)):e.dependencies.push(null),e.setters[j]&&e.setters[j](l)}}}function e(b){var c={};if(("object"==typeof b||"function"==typeof b)&&b!==a)if(k)for(var d in b)"default"!==d&&f(c,b,d);else{var e=b&&b.hasOwnProperty;for(var d in b)"default"===d||e&&!b.hasOwnProperty(d)||(c[d]=b[d])}return c.default=b,l(c,"__useDefault",{value:!0}),c}function f(a,b,c){try{var d;(d=Object.getOwnPropertyDescriptor(b,c))&&l(a,c,d)}catch(d){return a[c]=b[c],!1}}function g(b,c){var d=i[b];if(d&&!d.evaluated&&d.declarative){c.push(b);for(var e=0,f=d.normalizedDeps.length;f>e;e++){var k=d.normalizedDeps[e];-1==j.call(c,k)&&(i[k]?g(k,c):h(k))}d.evaluated||(d.evaluated=!0,d.module.execute.call(a))}}function h(a){if(o[a])return o[a];if("@node/"==a.substr(0,6))return o[a]=e(n(a.substr(6)));var b=i[a];if(!b)throw"Module "+a+" not present.";return d(i[a]),g(a,[]),i[a]=void 0,b.declarative&&l(b.module.exports,"__esModule",{value:!0}),o[a]=b.declarative?b.module.exports:b.esModule}var i={},j=Array.prototype.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},k=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(a){k=!1}var l;!function(){try{Object.defineProperty({},"a",{})&&(l=Object.defineProperty)}catch(a){l=function(a,b,c){try{a[b]=c.value||c.get.call(a)}catch(a){}}}}();var m={},n="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,o={"@empty":{}};return function(a,c,d,f){return function(g){g(function(g){for(var i=0;i<c.length;i++)!function(a,b){b&&b.__esModule?o[a]=b:o[a]=e(b)}(c[i],arguments[i]);f({register:b});var j=h(a[0]);if(a.length>1)for(var i=1;i<a.length;i++)h(a[i]);return d?j.default:j})}}}("undefined"!=typeof self?self:global)(["33","34"],["3","8","6","7","9","a","d","3a","31","10","11"],!1,function(a){this.require,this.exports,this.module;a.register("35",["3"],function(a,b){"use strict";var c,d,e=this&&this.__extends||function(){var a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,b){a.__proto__=b}||function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])};return function(b,c){function d(){this.constructor=b}a(b,c),b.prototype=null===c?Object.create(c):(d.prototype=c.prototype,new d)}}();b&&b.id;return{setters:[function(a){c=a}],execute:function(){d=function(a){function b(b,c,d,e,f){return a.call(this,b,c,d,e,f)||this}return e(b,a),b.prototype.preview=function(b){return a.prototype.post.call(this,"speechlib/preview",b)},b.prototype.getSpeechLibrary=function(){return a.prototype.get.call(this,"speechlib")},b.prototype.getCharacters=function(){return a.prototype.get.call(this,"characterlib")},b.prototype.getCharacter=function(b){return a.prototype.get.call(this,"character/"+b)},b.prototype.createCharacter=function(b){return a.prototype.post.call(this,"character",b)},b.prototype.createSpeech=function(b){return a.prototype.post.call(this,"speechlib",b)},b.prototype.deleteCharacter=function(b){return a.prototype.delete.call(this,"character/"+b)},b.prototype.deleteSpeech=function(b){return a.prototype.delete.call(this,"speechlib",b)},b.prototype.filter=function(b){return a.prototype.post.call(this,"speechlib/filter",b)},b.prototype.getCharacterNames=function(){return a.prototype.get.call(this,"characters")},b.prototype.generateZip=function(b){return a.prototype.post.call(this,"tts/exporter",b)},b.prototype.getPackageUrl=function(b,c){return c?a.prototype.get.call(this,"tts/exporter/library/"+b):a.prototype.get.call(this,"tts/exporter/"+b)},b.prototype.getVoices=function(){return a.prototype.get.call(this,"voicelist")},b.prototype.importSpeeches=function(b){return a.prototype.post.call(this,"speechlib/import",b)},b.prototype.enableRuntimeCapabilities=function(b){return a.prototype.post.call(this,"tts/runtimecapabilities",b)},b.prototype.getRuntimeCapabilitiesStatus=function(){return a.prototype.get.call(this,"tts/runtimecapabilities")},b.prototype.enableRuntimeCache=function(b){return a.prototype.post.call(this,"tts/runtimecache",b)},b.prototype.getCacheRuntimeGeneratedFiles=function(){return a.prototype.get.call(this,"tts/runtimecache")},b.prototype.saveCustomMappings=function(b){return a.prototype.post.call(this,"tts/custommappings",b)},b.prototype.getCustomMappings=function(){return a.prototype.get.call(this,"tts/custommappings")},b.prototype.getGeneratedPackages=function(){return a.prototype.get.call(this,"tts/generatedpackages")},b.prototype.deleteGeneratedPackage=function(b){return a.prototype.delete.call(this,"tts/generatedpackage/"+b)},b}(c.ApiHandler),a("TextToSpeechApi",d)}}}),a.register("36",["8","6","37","7","9","a"],function(a,b){"use strict";var c,d,e,f,g,h,i,j=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=f<3?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(f<3?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},k=this&&this.__metadata||function(a,b){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(a,b)};b&&b.id;return{setters:[function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a},function(a){h=a}],execute:function(){i=function(){function a(a,b,d){this.http=a,this.aws=b,this.metricservice=d,this.displayName="Text to Speech",this.srcIcon="https://m.media-amazon.com/images/G/01/cloudcanvas/images/Text_to_Speech_GEM_optimized._V518452892_.png",this.state=new c.TackableStatus,this.metric=new c.TackableMeasure}return a.prototype.ngOnInit=function(){this._apiHandler=new e.TextToSpeechApi(this.context.ServiceUrl,this.http,this.aws,this.metricservice,this.context.identifier),this.report(this.metric),this.assign(this.state)},a.prototype.report=function(a){a.name="Speech Lines",a.value="Loading...",this._apiHandler.get("speechlib").subscribe(function(b){var c=JSON.parse(b.body.text());a.value=c.result.entries.length},function(b){a.value="Offline"})},a.prototype.assign=function(a){a.label="Loading",a.styleType="Loading",this._apiHandler.get("service/status").subscribe(function(b){var c=JSON.parse(b.body.text());a.label="online"==c.result.status?"Online":"Offline",a.styleType="online"==c.result.status?"Enabled":"Offline"},function(b){a.label="Offline",a.styleType="Offline"})},j([d.Input(),k("design:type",Object)],a.prototype,"context",void 0),j([d.Input(),k("design:type",String)],a.prototype,"displayName",void 0),j([d.Input(),k("design:type",String)],a.prototype,"srcIcon",void 0),a=j([d.Component({selector:"cloudgempolly-thumbnail",template:'\n    <thumbnail-gem \n        [title]="displayName" \n        [cost]="\'Low\'" \n        [srcIcon]="srcIcon" \n        [metric]="metric" \n        [state]="state" \n        >\n    </thumbnail-gem>'}),k("design:paramtypes",[f.Http,g.AwsService,h.LyMetricService])],a)}(),a("TextToSpeechThumbnailComponent",i)}}}),a.register("38",[],function(a,b){"use strict";var c,d,e;b&&b.id;return{setters:[],execute:function(){c=function(){function a(a){this.character=a.character,this.line=a.line,this.tags=a.tags,this.isSelected=a.isSelected,this.isEditing=!1,this.isUploaded=!1,this.previewLabelText=a.previewLabelText}return a}(),a("SpeechEntry",c),d=function(){function a(a){this.name=a.name,this.voice=a.voice,this.language=a.language,this.speechMarksStatus=a.speechMarksStatus,this.speechMarks=a.speechMarks,this.voiceList=a.voiceList,this.ssmlProsodyTags=a.ssmlProsodyTags,this.ssmlProsodyTagMappings=a.ssmlProsodyTagMappings,this.ssmlLanguage=a.ssmlLanguage,this.timbre=a.timbre,this.isEditing=!1,this.isUploaded=!1,this.previewLabelText=a.previewLabelText}return a}(),a("CharacterEntry",d),e=function(){function a(a){this.name=a.name,this.lastModified=a.lastModified,this.size=a.size,this.isSelected=!1}return a}(),a("GeneratedPackageEntry",e)}}}),a.register("39",["7","6","d","9","37","8","3a","31","a"],function(a,b){"use strict";var c,d,e,f,g,h,i,j,k,l,m,n=this&&this.__extends||function(){var a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,b){a.__proto__=b}||function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])};return function(b,c){function d(){this.constructor=b}a(b,c),b.prototype=null===c?Object.create(c):(d.prototype=c.prototype,new d)}}(),o=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=f<3?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(f<3?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},p=this&&this.__metadata||function(a,b){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(a,b)};b&&b.id;return{setters:[function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a},function(a){g=a},function(a){h=a},function(a){i=a},function(a){j=a},function(a){k=a}],execute:function(){!function(a){a[a.Delete=0]="Delete",a[a.Import=1]="Import",a[a.List=2]="List",a[a.Download=3]="Download",a[a.Edit=4]="Edit"}(l||(l={})),a("Mode",l),m=function(a){function b(b,c,d,e,f){var g=a.call(this)||this;return g.http=b,g.aws=c,g.toastr=d,g.metric=f,g.subNavActiveIndex=0,g.pageSize=10,g.currentSpeechLibIndex=1,g.currentCharactersIndex=1,g.currentGeneratedPackagesIndex=1,g.toastr.setRootViewContainerRef(e),g}return n(b,a),b.prototype.ngOnInit=function(){var a=this;this._apiHandler=new g.TextToSpeechApi(this.context.ServiceUrl,this.http,this.aws,this.metric,this.context.identifier),System.import("https://m.media-amazon.com/images/G/01/cloudcanvas/papaparse/papaparse.min._V518065675_.js").then(function(b){a.papa=b}),this.deleteModal=this.deleteModal.bind(this),this.deleteMultipleSpeechesModal=this.deleteMultipleSpeechesModal.bind(this),this.dismissModal=this.dismissModal.bind(this),this.downloadModal=this.downloadModal.bind(this),this.editModal=this.editModal.bind(this),this.characters=[],this.tagFilterText="",this.tagsFilterLogic="Or",this.characterFilterText="",this.speechMarksTip="Speech Marks are metadata files that describe synthesized speech which can be used for lip-syncing.",this.runtimeCapabilitiesTip="If you disable the runtime capabilities, you will not be able to use a game client to generate speech files.",this.downloadDescriptionText="After clicking the “Download” button, the .zip file may take a few minutes to generate on the server. The file will begin downloading automatically once it is ready.  View and re-download previously generated .zip files on the “Generated Packages” tab.",this.audioContext=new AudioContext,this.pendingJobs=[],this.prosody={volume:["default","silent","x-soft","soft","medium","loud","x-loud"],rate:["default","x-slow","slow","medium","fast","x-fast"],pitch:["default","x-low","low","medium","high","x-high"]},this.ssmlProsodyTagTypes=["volume","rate","pitch"],this.Modes=l,this.update()},b.prototype.clickTabArea=function(a){var b,c=a.target;0==this.subNavActiveIndex&&(b=this.speechLibTabAreaRef.nativeElement),1==this.subNavActiveIndex&&(b=this.charactersTabAreaRef.nativeElement),c==b&&this.saveCurrentEditing()},b.prototype.switchRuntimeCapabilitiesStatus=function(){var a=this,b={enabled:this.runtimeCapabilitiesEnabled};this._apiHandler.enableRuntimeCapabilities(b).subscribe(function(a){},function(b){a.toastr.error("Runtime capabilities status was not switched correctly. "+b.message)})},b.prototype.switchRuntimeCacheStatus=function(){var a=this,b={enabled:this.runtimeCacheEnabled};this._apiHandler.enableRuntimeCache(b).subscribe(function(a){},function(b){a.toastr.error("Runtime cache status was not switched correctly. "+b.message)})},b.prototype.openTagFilter=function(){this.originalfilterTagList=JSON.parse(JSON.stringify(this.filterTagList)),this.tagFilterOpen=!this.tagFilterOpen},b.prototype.openCharacterFilter=function(){this.originalfilterCharacterList=JSON.parse(JSON.stringify(this.filterCharacterList)),this.characterFilterOpen=!this.characterFilterOpen},b.prototype.clearPendingJobsList=function(){this.pendingJobs=[]},b.prototype.applyFilter=function(){var a=this,b=[];this.tagFilterText="";for(var c=0,d=this.filterTagList;c<d.length;c++){var e=d[c];e.isSelected&&b.push(e.name)}this.tagFilterApplied=b.length>0;for(var f=[],g=0,h=this.filterCharacterList;g<h.length;g++){var i=h[g];i.isSelected&&f.push(i.name)}this.characterFilterApplied=f.length>0;var j={tags:b,characters:f,logic:this.tagsFilterLogic};this.isLoadingSpeechLibrary=!0,this.sortDir="asc",this.originalfilterTagList=JSON.parse(JSON.stringify(this.filterTagList)),this._apiHandler.filter(j).subscribe(function(b){var c=JSON.parse(b.body.text());a.speechLibrary=c.result.entries,a.sort(0,a.speechLibrary.length-1,a.speechLibrary,"character","asc"),a.filterTagList=[],a.updatePaginationInfo(),a.updatePageContent(1),a.isLoadingSpeechLibrary=!1,a.initializeSpeeches()},function(b){a.toastr.error("The filter did not work properly. "+b.message),a.isLoadingCharacters=!1}),this.tagFilterOpen=!1,this.characterFilterOpen=!1},b.prototype.cancelTagFilter=function(){this.filterTagList=JSON.parse(JSON.stringify(this.originalfilterTagList)),this.tagFilterOpen=!this.tagFilterOpen},b.prototype.cancelCharacterFilter=function(){this.filterCharacterList=JSON.parse(JSON.stringify(this.originalfilterCharacterList)),this.characterFilterOpen=!this.characterFilterOpen},b.prototype.update=function(){0==this.subNavActiveIndex&&this.updateSpeechLibraryTab(),1==this.subNavActiveIndex&&this.updateCharacterTab(),2==this.subNavActiveIndex&&this.updateGeneratedpackagesTab(),3==this.subNavActiveIndex&&this.updateSettingsTab()},b.prototype.addNewRow=function(){0==this.subNavActiveIndex?(this.sortDir="",this.createNewSpeech()):1==this.subNavActiveIndex&&(this.sortDir="",this.createNewCharacter())},b.prototype.deleteModal=function(a){this.deleteMultipleSpeeches=!1,this.mode=l.Delete,0==this.subNavActiveIndex?this.currentSpeech=a:1==this.subNavActiveIndex?this.currentCharacter=a:2==this.subNavActiveIndex&&(this.currentGeneratedPackage=a)},b.prototype.deleteMultipleSpeechesModal=function(){this.deleteMultipleSpeeches=!0,this.mode=l.Delete},b.prototype.dismissModal=function(){this.mode=l.List},b.prototype.downloadModal=function(){0==this.subNavActiveIndex?this.mode=l.Download:2==this.subNavActiveIndex&&this.downloadGeneratedPackages()},b.prototype.editModal=function(a){this.mode=l.Edit,this.currentCharacter=JSON.parse(JSON.stringify(a)),this.characterBeforeChange=this.currentCharacter},b.prototype.getSubNavItem=function(a){this.subNavActiveIndex=a,this.update()},b.prototype.delete=function(){this.modalRef.close(),this.mode=l.List,0==this.subNavActiveIndex?this.deleteSpeechLine(this.currentSpeech):1==this.subNavActiveIndex?this.deleteCurrentCharacter():2==this.subNavActiveIndex&&this.deleteGeneratedPackage(this.currentGeneratedPackage)},b.prototype.deleteSelectedSpeeches=function(){this.modalRef.close(),this.mode=l.List;for(var a=0,b=this.speechLibrary;a<b.length;a++){var c=b[a];c.isSelected.list&&this.deleteSpeechLine(c)}},b.prototype.downloadSpeeches=function(){var a=this;this.modalRef.close(),this.mode=l.List;for(var b=[],c=0,d=this.speechLibrary;c<d.length;c++){var e=d[c];e.isSelected.list&&b.push({character:e.character,line:e.line,tags:e.tags})}for(var f={entries:b,name:this.zipFileName?this.zipFileName:"export"},g=0,h=this.pendingJobs;g<h.length;g++){var i=h[g];if(i.name==f.name&&"Pending"==i.status)return this.toastr.error("The zip file was not downloaded correctly. Another file with the same name '"+f.name+"' is being generated at the moment."),void this.pendingJobs.push({name:f.name,key:"",status:"Failure"})}this._apiHandler.generateZip(f).subscribe(function(b){var c=JSON.parse(b.body.text());""===c.result.key?a.toastr.error("The zip file was not downloaded correctly. Cannot generate the zip file."):(a.pendingJobs.push({name:f.name,key:c.result.key,status:"Pending"}),a.unselectSpeechLines(),a.getPackageUrl(c.result.key,!1))},function(b){a.toastr.error("The zip file was not downloaded correctly."+b.message),a.setPendingJobStatus(name,"Failure")}),this.zipFileName=""},b.prototype.getImportableSpeeches=function(a){var b=a.target,c=b.files[0];b.value="",this.papa.parse(c,{preview:1,complete:function(a){var b=a.data[0];this.customFields=[];for(var d=0,e=0,f=b;e<f.length;e++){var g=f[e];if("MD5"!=g){if(-1!=this.customFields.indexOf(g,0)){this.toastr.error("Duplicate field names are not allowed in the header row of the .csv file.");break}this.customFields.push(g)}else d=1}this.customFields.length==b.length-d&&this.parseCsvFile(c)}.bind(this)})},b.prototype.listImportableSpeeches=function(){var a=this,b={mappings:this.currentCustomMappings};this._apiHandler.saveCustomMappings(b).subscribe(function(b){a.toastr.success("The custom mappings were saved")},function(b){a.toastr.error("The custom mappings were not saved correctly."+b.message)}),this.customMappingsLoaded=!0,this.ImportableSpeechesExist(this.importableSpeechesData,this.customFields)||this.toastr.success("No new speeches were imported.")},b.prototype.preview=function(a,b){var c=this,d={};"speech"==b?d={character:a.character,line:a.line}:"character"==b&&(d={character:a.name,line:"Hi! My name is "+a.name+"."}),a.previewLabelText="Waiting...",this._apiHandler.preview(d).subscribe(function(d){var e=JSON.parse(d.body.text());if(""!=e.result.audioUrl&&""!=e.result.speechMarksUrl&&"speech"==b){var f=e.result.audioUrl,g=e.result.speechMarksUrl;a.previewLabelText="Preview",c.playRef.nativeElement.href="https://m.media-amazon.com/images/I/91XDP5dWVvL.html?&audiourl="+encodeURIComponent(f)+"&visemesurl="+encodeURIComponent(g),c.playRef.nativeElement.click()}else if(""!=e.result.audioUrl&&""==e.result.speechMarksUrl||"character"==b){var h=new XMLHttpRequest;h.open("GET",e.result.audioUrl,!0),h.responseType="arraybuffer",h.onload=function(){a.previewLabelText="Preview",this.playAudio(h.response)}.bind(c),h.send()}},function(b){c.toastr.error("The spoken line was not generated correctly."+b.message),a.previewLabelText="Preview"})},b.prototype.clickImportButton=function(){this.importButtonRef.nativeElement.click()},b.prototype.selectAll=function(a,b,c){var d=a.target.checked;if(0==this.subNavActiveIndex){for(var e=0,f=b;e<f.length;e++){var g=f[e];g.isSelected[c]!=d&&("list"==c&&this.updateSelectedSpeechesNum(g),g.isSelected[c]=d)}this.selectedSpeechesNum!=b.length&&(this.selectAllCheckBoxRef.nativeElement.checked=!1)}else if(2==this.subNavActiveIndex){for(var h=0,i=b;h<i.length;h++){var j=i[h];j.isSelected!=d&&(this.updateSelectedPackgesNum(j),j.isSelected=d)}this.selectedPackagesNum!=b.length&&(this.selectAlleneratedPackagesRef.nativeElement.checked=!1)}},b.prototype.onEditableFieldsClicked=function(a){a.isEditing||(this.saveCurrentEditing(),a.isEditing=!0,1==this.subNavActiveIndex?(this.characterBeforeChange=JSON.parse(JSON.stringify(a)),this.currentCharacter=a):(this.speechBeforeChange=JSON.parse(JSON.stringify(a)),this.currentSpeech=a))},b.prototype.onLanguageChanged=function(a){this.onEditableFieldsClicked(a),a.voiceList=this.voices[a.language],a.voice=a.voiceList[0].voiceId},b.prototype.onSpeechMarksChanged=function(a,b){if(!a.isEditing){this.saveCurrentEditing(),a.isEditing=!0,this.characterBeforeChange=JSON.parse(JSON.stringify(a)),this.currentCharacter=a;for(var c=0,d=this.characterBeforeChange.speechMarksStatus;c<d.length;c++){var e=d[c];if(e.name==b){e.isChecked=!e.isChecked;break}}}},b.prototype.save=function(a){a.isEditing=!1,this.autoSelectDisabled=!0,0==this.subNavActiveIndex?this.updateSpeechLine(a):this.updateCharacter(a)},b.prototype.cancel=function(a){if(!a.isUploaded)return 0==this.subNavActiveIndex?this.removeFromArray(this.speechLibrary,a):1==this.subNavActiveIndex&&(this.removeFromArray(this.characters,a),this.removeFromArray(this.characterNames,a.name)),this.updatePaginationInfo(),void this.paginationRef.reset();for(var b=0==this.subNavActiveIndex?this.speechBeforeChange:this.characterBeforeChange,c=0,d=Object.keys(b);c<d.length;c++){var e=d[c];a[e]=b[e]}a.isEditing=!1,this.autoSelectDisabled=!0},b.prototype.saveCurrentEditing=function(){var a=0==this.subNavActiveIndex?this.currentSpeech:this.currentCharacter;if(a.isUploaded){var b=0==this.subNavActiveIndex?this.speechBeforeChange:this.characterBeforeChange;b&&a.isEditing&&JSON.stringify(b)!=JSON.stringify(a)?this.save(a):a.isEditing=!1}else 0==this.subNavActiveIndex&&this.speechLibrary.indexOf(this.currentSpeech,0)>-1?this.save(a):1==this.subNavActiveIndex&&this.characters.indexOf(this.currentCharacter,0)>-1?this.save(a):a.isEditing=!1},b.prototype.selectCurrentRow=function(a){this.autoSelectDisabled?this.autoSelectDisabled=!1:a.isEditing||this.mode==l.Delete||"Waiting..."==a.previewLabelText||(a.isSelected.list||(this.updateSelectedSpeechesNum(a),a.isSelected.list=!0),this.saveCurrentEditing())},b.prototype.updatePageContent=function(a){var b=(a-1)*this.pageSize,c=a*this.pageSize;0==this.subNavActiveIndex?(this.speechLibOnCurrentPage=this.speechLibrary.slice(b,c),this.currentSpeechLibIndex=a):1==this.subNavActiveIndex?(this.charactersOnCurrentPage=this.characters.slice(b,c),this.currentCharactersIndex=a):2==this.subNavActiveIndex&&(this.generatedPackagesOnCurrentPage=this.generatedPackages.slice(b,c),this.currentGeneratedPackagesIndex=a)},b.prototype.sortTable=function(a){var b,c;0==this.subNavActiveIndex?(b=this.speechLibrary,c="character"):1==this.subNavActiveIndex?(b=this.characters,c="name"):2==this.subNavActiveIndex&&(b=this.generatedPackages,c="name"),this.sort(0,b.length-1,b,c,this.getSortOrder(c)),this.paginationRef.reset()},b.prototype.savessmlTag=function(){this.modalRef.close(),this.mode=l.List;for(var a=0,b=this.charactersOnCurrentPage;a<b.length;a++){var c=b[a];if(c.name==this.currentCharacter.name){for(var d=[],e=0,f=Object.keys(c.ssmlProsodyTagMappings);e<f.length;e++){var g=f[e];"default"!=this.currentCharacter.ssmlProsodyTagMappings[g]&&d.push(g+"='"+this.currentCharacter.ssmlProsodyTagMappings[g]+"'")}d.length>0?c.ssmlProsodyTags=d:c.ssmlProsodyTags&&delete c.ssmlProsodyTags,c.ssmlProsodyTagMappings=this.currentCharacter.ssmlProsodyTagMappings,c.ssmlLanguage=this.currentCharacter.ssmlLanguage,c.ssmlLanguage==this.voices[c.language][0].languageCode&&delete c.ssmlLanguage,c.timbre=this.currentCharacter.timbre,100==c.timbre&&delete c.timbre,this.updateCharacter(c);break}}},b.prototype.resetTimbre=function(){this.currentCharacter.timbre=100},b.prototype.getDeleteModalTitle=function(){return 0==this.subNavActiveIndex?"Delete Speech":1==this.subNavActiveIndex?"Delete Chatacter":"Delete Generated Package"},b.prototype.getSortOrder=function(a){return""==this.sortDir?this.sortDir="asc":this.sortDir="asc"==this.sortDir?"desc":"asc",this.sortDir},b.prototype.addExistingTagToList=function(a){for(var b=0,c=this.filterTagList;b<c.length;b++){var d=c[b];if(d.name==a)return void d.count++}for(var e=!1,f=0,g=this.originalfilterTagList;f<g.length;f++){var h=g[f];if(h.name==a){e=h.isSelected;break}}var i={name:a,isSelected:e,count:1};this.filterTagList.push(i)},b.prototype.addCharacterInUseToList=function(a){for(var b=0,c=this.filterCharacterList;b<c.length;b++){var d=c[b];if(d.name==a)return void d.count++}var e={name:a,isSelected:!1,count:1};this.filterCharacterList.push(e)},b.prototype.deleteExistingTagFromList=function(a){this.filterTagList=this.filterTagList.filter(function(b){var c=b.name!=a;return b.name==a&&b.count>1&&(b.count--,c=!0),c})},b.prototype.deleteCharacterInUseFromList=function(a){this.filterCharacterList=this.filterCharacterList.filter(function(b){var c=b.name!=a;return b.name==a&&b.count>1&&(b.count--,c=!0),c})},b.prototype.updateCharacterTab=function(){var a=this;this.currentCharacter=this.defaultCharacter(),this.characterBeforeChange=this.defaultCharacter(),this.sortDir="asc",this.isLoadingCharacters=!0,this._apiHandler.getVoices().subscribe(function(b){var c=JSON.parse(b.body.text());a.voices=c.result.voices,a.languages=Object.keys(a.voices),a.updateCharacters()},function(b){a.toastr.error("The language list did not refresh properly. "+b.message),a.isLoadingCharacters=!1})},b.prototype.updateCharacters=function(){var a=this;this._apiHandler.getCharacters().subscribe(function(b){var c=JSON.parse(b.body.text());a.characters=c.result.characters,a.sort(0,a.characters.length-1,a.characters,"name",a.sortDir),a.updatePaginationInfo(),a.updatePageContent(1),0==a.characters.length&&(a.isLoadingCharacters=!1),a.initializeCharacters()},function(b){a.toastr.error("The characters did not refresh properly. "+b.message),a.isLoadingCharacters=!1})},b.prototype.initializeCharacters=function(){for(var a=0,b=this.characters;a<b.length;a++){var c=b[a];this.initializeCurrentCharacter(c)}},b.prototype.initializeCurrentCharacter=function(a){if(a.isEditing=!1,a.isUploaded=!0,a.previewLabelText="Preview",a.speechMarksStatus=[{name:"SSML",isChecked:a.speechMarks&&a.speechMarks.includes("T")},{name:"Viseme",isChecked:a.speechMarks&&a.speechMarks.includes("V")},{name:"Sentence/Word",isChecked:a.speechMarks&&a.speechMarks.includes("S")}],this.voices){if(a.voiceList||this.getCharacterVoiceList(a),a.ssmlProsodyTagMappings={volume:"default",rate:"default",pitch:"default"},a.ssmlProsodyTags)for(var b=0,c=a.ssmlProsodyTags;b<c.length;b++){var d=c[b],e=d.split("=")[0],f=d.split("=")[1],g=f.substring(1,f.length-1);a.ssmlProsodyTagMappings[e]=g}a.ssmlLanguage||(a.ssmlLanguage=this.voices[a.language][0].languageCode),a.timbre||(a.timbre=100)}},b.prototype.getCharacterVoiceList=function(a){for(var b in this.voices)for(var c=this.voices[b],d=0,e=c;d<e.length;d++){var f=e[d];if(f.voiceId==a.voice){a.language=b,a.voiceList=c;break}}this.isLoadingCharacters=!1},b.prototype.updateCharacter=function(a){var b=this;a.speechMarks="";for(var c=0,d=a.speechMarksStatus;c<d.length;c++){var e=d[c];e.isChecked&&(a.speechMarks+="SSML"==e.name?"T":e.name.charAt(0))}if(a.isUploaded){a.name!=this.characterBeforeChange.name&&(this.sortDir="");var f=this.characterBeforeChange.name;this._apiHandler.deleteCharacter(this.characterBeforeChange.name).subscribe(function(c){b.addCharacterEntry(a,"Update",f)},function(c){b.toastr.error("The character '"+f+"' was not updated. "+c.Message),b.cancel(a)})}else this.sortDir="",this.addCharacterEntry(a,"Create")},b.prototype.createNewCharacter=function(a){var b=this,c=this.defaultCharacter();if(this.characters.length>0&&(c=JSON.parse(JSON.stringify(this.characters[0]))),c.name=a||"NewCharacter_"+this.characters.length,!c.name.match(/^[0-9a-zA-Z_]+$/))return void this.toastr.error('The character name can only contain non-alphanumeric characters and "_".');c.ssmlProsodyTags=[],this.initializeCurrentCharacter(c),c.isUploaded=!1,c.isEditing=!0,this.characters.unshift(c),this.characterNames.unshift(c.name),this.updatePaginationInfo(),this.paginationRef.reset(),this.highlightNewRow=!0,setTimeout(function(){b.highlightNewRow=!1},1e3),this.currentCharacter=c,a&&this.addCharacterEntry(c,"Create")},b.prototype.addCharacterEntry=function(a,b,c){var d=this,e={name:a.name,voice:a.voice,speechMarks:a.speechMarks};a.ssmlProsodyTags&&(e.ssmlProsodyTags=a.ssmlProsodyTags),a.ssmlLanguage&&a.ssmlLanguage!=this.voices[a.language][0].languageCode&&(e.ssmlLanguage=a.ssmlLanguage),a.timbre&&100!=a.timbre&&(e.timbre=a.timbre);var f=c||a.name;if(!e.name.match(/^[0-9a-zA-Z_]+$/))return this.toastr.error('The character name can only contain non-alphanumeric characters and "_".'),void("Create"==b?a.isEditing=!0:"Update"==b&&(this.cancel(a),this.addCharacterEntry(a,"Reset")));this._apiHandler.createCharacter(e).subscribe(function(){"Update"==b?(d.toastr.success("The character '"+f+"' has been updated."),d.initializeCurrentCharacter(a)):"Create"==b&&(d.toastr.success("The character '"+f+"' was created."),d.initializeCurrentCharacter(a))},function(c){"Create"==b?(d.toastr.error("The character '"+f+"' was not created correctly. "+c.message),a.isEditing=!0):"Update"==b?(d.toastr.error("The character '"+f+"' was not updated. "+c.message),d.cancel(a),d.addCharacterEntry(a,"Reset")):"Reset"==b&&d.toastr.error("The character '"+f+"' was not reset correctly. "+c.message)})},b.prototype.deleteCurrentCharacter=function(){var a=this;this._apiHandler.deleteCharacter(this.currentCharacter.name).subscribe(function(b){a.toastr.success("The character '"+a.currentCharacter.name+"' was deleted."),a.removeFromArray(a.characters,a.currentCharacter),a.removeFromArray(a.characterNames,a.currentCharacter.name),a.updatePaginationInfo(),a.currentCharactersIndex=a.characterPages<a.currentCharactersIndex?a.characterPages:a.currentCharactersIndex,a.updatePageContent(a.currentCharactersIndex)},function(b){a.toastr.error("The character '"+a.currentCharacter.name+"' could not be deleted. "+b.message)})},b.prototype.updateGeneratedpackagesTab=function(){var a=this;this.sortDir="asc",this.isLoadingGeneratedPackages=!0,this._apiHandler.getGeneratedPackages().subscribe(function(b){var c=JSON.parse(b.body.text());a.generatedPackages=c.result.generatedPackages,a.sort(0,a.generatedPackages.length-1,a.generatedPackages,"name",a.sortDir),a.updatePaginationInfo(),a.updatePageContent(1),a.updateGeneratedPackagesInfo(),a.selectedPackagesNum=0,a.isLoadingGeneratedPackages=!1},function(b){a.toastr.error("The generated packages did not refresh properly. "+b.message),a.isLoadingGeneratedPackages=!1})},b.prototype.updateGeneratedPackagesInfo=function(){for(var a=((new Date).getTimezoneOffset(),0),b=this.generatedPackages;a<b.length;a++){var c=b[a];c.isSelected=!1;var d=c.lastModified+" UTC";c.lastModified=moment.utc(d,"YYYY-MM-DD HH:mm:ss [UTC]").local()}},b.prototype.deleteGeneratedPackage=function(a){var b=this;this._apiHandler.deleteGeneratedPackage(a.name).subscribe(function(c){var d=JSON.parse(c.body.text());"success"==d.result.status?(b.toastr.success("The generated package '"+a.name+"' was deleted."),a.isSelected&&b.selectedPackagesNum--,b.removeFromArray(b.generatedPackages,a),b.updatePaginationInfo(),b.updatePageContent(b.currentGeneratedPackagesIndex)):b.toastr.error("The generated package '"+a.name+"' was not deleted properly. "+d.result.status)},function(c){b.toastr.error("The generated package '"+a.name+"' was not deleted properly. "+c.message)})},b.prototype.markSettingAsLoaded=function(a){this.loadedSettings.push(a),2==this.loadedSettings.length&&(this.isLoadingSettings=!1)},b.prototype.updateSettingsTab=function(){var a=this;this.loadedSettings=[],this.isLoadingSettings=!0,this._apiHandler.getRuntimeCapabilitiesStatus().subscribe(function(b){var c=JSON.parse(b.body.text());a.runtimeCapabilitiesEnabled="enabled"==c.result.status,a.markSettingAsLoaded("runtimeCapabilities")},function(b){a.toastr.error("The settings did not refresh properly. "+b.message),a.markSettingAsLoaded("runtimeCapabilitiesERROR")}),this._apiHandler.getCacheRuntimeGeneratedFiles().subscribe(function(b){var c=JSON.parse(b.body.text());a.runtimeCacheEnabled="enabled"==c.result.status,a.markSettingAsLoaded("runtimeCache")},function(b){a.toastr.error("The settings did not refresh properly. "+b.message),a.markSettingAsLoaded("runtimeCacheERROR")})},b.prototype.updateSpeechLibraryTab=function(){var a=this;this.currentSpeech=this.defaultSpeech(),this.speechBeforeChange=this.defaultSpeech(),this.sortDir="asc",this.originalfilterTagList=[],this.isLoadingSpeechLibrary=!0,this._apiHandler.getCharacterNames().subscribe(function(b){var c=JSON.parse(b.body.text());a.characterNames=c.result.characters,a.updateSpeechesInfo()},function(b){a.toastr.error("The speech library did not refresh properly. "+b.message),a.isLoadingSpeechLibrary=!1})},b.prototype.updateSpeechesInfo=function(){var a=this;this._apiHandler.getSpeechLibrary().subscribe(function(b){var c=JSON.parse(b.body.text());a.speechLibrary=c.result.entries,a.sort(0,a.speechLibrary.length-1,a.speechLibrary,"character",a.sortDir),a.updatePaginationInfo(),a.updatePageContent(1),a.isLoadingSpeechLibrary=!1,a.selectedSpeechesNum=0,a.selectedSpeechIDs=[],a.filterTagList=[],a.filterCharacterList=[],a.initializeSpeeches()},function(b){a.toastr.error("The speech library did not refresh properly. "+b.message),a.isLoadingSpeechLibrary=!1})},b.prototype.updatePaginationInfo=function(){if(0==this.subNavActiveIndex){var a=this.speechLibrary.length;this.speechLinePages=Math.ceil(a/this.pageSize)}else if(1==this.subNavActiveIndex){var a=this.characters.length;this.characterPages=Math.ceil(a/this.pageSize)}else if(2==this.subNavActiveIndex){var a=this.generatedPackages.length;this.generatedPackagesPages=Math.ceil(a/this.pageSize)}},b.prototype.initializeSpeeches=function(){for(var a=0,b=this.speechLibrary;a<b.length;a++){var c=b[a];this.initializeCurrentSpeech(c)}},b.prototype.initializeCurrentSpeech=function(a){a.isEditing=!1,a.isUploaded=!0,a.previewLabelText="Preview";var b=this.selectedSpeechIDs.indexOf(a.character+a.line,0);a.isSelected={list:b>-1,import:!1},this.addCharacterInUseToList(a.character);for(var c=0,d=a.tags;c<d.length;c++){var e=d[c];this.addExistingTagToList(e)}},b.prototype.updateSpeechLine=function(a){var b=this;if(a.isUploaded){a.character!=this.speechBeforeChange.character&&(this.sortDir="");var c={character:this.speechBeforeChange.character,line:this.speechBeforeChange.line};this._apiHandler.deleteSpeech(c).subscribe(function(d){b.deleteCharacterInUseFromList(b.speechBeforeChange.character),b.originalfilterTagList=JSON.parse(JSON.stringify(b.filterTagList));for(var e=0,f=b.speechBeforeChange.tags;e<f.length;e++){var g=f[e];b.deleteExistingTagFromList(g)}b.addSpeechEntry(a,"Update",c.line)},function(d){b.toastr.error("The speech '"+c.line+"' was not updated. "+d.Message),b.cancel(a)})}else this.sortDir="",this.addSpeechEntry(a,"Create")},b.prototype.createNewSpeech=function(){var a=this;0==this.characterNames.length&&(this.createNewCharacter("NewCharacter_0"),this.toastr.success("A new character was created. Switch to the Characters tab to edit it."));var b=this.defaultSpeech();this.speechLibrary.length>0?b=JSON.parse(JSON.stringify(this.speechLibrary[0])):b.character=this.characterNames[0],b.line="NewSpeechLine_"+this.speechLibrary.length,this.initializeCurrentSpeech(b),b.isUploaded=!1,b.isEditing=!0,this.speechLibrary.unshift(b),this.updatePaginationInfo(),this.paginationRef.reset(),this.highlightNewRow=!0,setTimeout(function(){a.highlightNewRow=!1},1e3),this.currentSpeech=b},b.prototype.addSpeechEntry=function(a,b,c){var d=this,e={character:a.character,line:a.line,tags:a.tags},f=c||a.line;this._apiHandler.createSpeech(e).subscribe(function(c){var g=JSON.parse(c.body.text());status=g.result.status,"duplicate"==status?(d.toastr.error("Speech line '"+e.line+"' already exists!"),"Create"==b&&(a.isEditing=!0),"Update"==b&&(d.cancel(a),d.addSpeechEntry(a,"Reset"))):"Update"==b?(d.toastr.success("The speech '"+f+"' has been updated."),d.initializeCurrentSpeech(a)):"Create"==b&&(d.toastr.success("The speech '"+f+"' was created."),d.initializeCurrentSpeech(a))},function(c){"Create"==b?(d.toastr.error("The speech '"+f+"'was not created correctly. "+c.message),a.isEditing=!0):"Update"==b?(d.toastr.error("The speech '"+f+"' was not updated. "+c.message),d.cancel(a),d.addSpeechEntry(a,"Reset")):"Reset"==b&&d.toastr.error("The speech '"+f+"' was not reset correctly. "+c.message)})},b.prototype.deleteSpeechLine=function(a){for(var b=this,c=0,d=a.tags;c<d.length;c++){var e=d[c];this.deleteExistingTagFromList(e)}var f={character:a.character,line:a.line};this._apiHandler.deleteSpeech(f).subscribe(function(c){b.toastr.success("The speech '"+f.line+"' was deleted."),b.removeFromArray(b.speechLibrary,a),a.isSelected.list&&b.updateSelectedSpeechesNum(a),b.updatePaginationInfo(),b.currentSpeechLibIndex=b.speechLinePages<b.currentSpeechLibIndex?b.speechLinePages:b.currentSpeechLibIndex,b.updatePageContent(b.currentSpeechLibIndex)},function(a){b.toastr.error("The speech '"+f.line+"' could not be deleted. "+a.message),b.selectedSpeechesNum--})},b.prototype.removeFromArray=function(a,b){var c=a.indexOf(b,0);c>-1&&a.splice(c,1)},b.prototype.ImportableSpeechesExist=function(a,b){this.importableSpeeches=[];for(var c=0,d=a;c<d.length;c++){var e=d[c],f=this.defaultSpeech();f.tags=[];for(var g=0,h=this.customFields;g<h.length;g++){var i=h[g];if("MD5"!=i&&"tag"!=this.currentCustomMappings[i]&&""!=this.currentCustomMappings[i])f[this.currentCustomMappings[i]]=e[i];else if(""!=this.currentCustomMappings[i]&&e[i])for(var j=String(e[i]).split(","),k=0,l=j;k<l.length;k++){var m=l[k];if(""!=m){var n="Tags"==i?m:i+":"+m;f.tags.push(n)}}}f.character&&""!=f.character&&this.addImportableSpeech(f)}return this.importableSpeeches.length>0},b.prototype.addImportableSpeech=function(a){for(var b=0,c=this.speechLibrary;b<c.length;b++){var d=c[b];if(d.character==a.character&&d.line==a.line)return}this.importableSpeeches.push(a)},b.prototype.importSelectedSpeeches=function(){var a=this;this.modalRef.close();for(var b=[],c=0,d=this.importableSpeeches;c<d.length;c++){var e=d[c];if(e.isSelected.import){var f=new g.SpeechEntry(e);-1==this.characterNames.indexOf(e.character,0)&&this.createNewCharacter(e.character),b.push(f)}}if(0!=b.length){var h={entries:b};this._apiHandler.importSpeeches(h).subscribe(function(){a.toastr.success("The speeches were imported.");for(var c=0,d=b;c<d.length;c++){var e=d[c];a.initializeCurrentSpeech(e),a.speechLibrary.unshift(e),a.updatePaginationInfo(),a.paginationRef.reset()}a.updatePaginationInfo(),a.paginationRef.reset()},function(b){a.toastr.error("The speeches were not imported correctly.")}),this.mode=l.List}},b.prototype.characterNameExists=function(a){for(var b=0,c=this.characters;b<c.length;b++){if(c[b].name==a)return!0}return!1},b.prototype.getPackageUrl=function(a,b){var c=this;void 0===b&&(b=!0),this._apiHandler.getPackageUrl(a,b).subscribe(function(d){var e=JSON.parse(d.body.text());"pending"!=e.result.url?(window.open(e.result.url),c.setPendingJobStatus(a,"Success",!b)):setTimeout(function(){c.getPackageUrl(a,b)},1e3)},function(d){c.toastr.error("The zip file was not downloaded correctly."+d.message),c.setPendingJobStatus(a,"Failure",!b)})},b.prototype.setPendingJobStatus=function(a,b,c){void 0===c&&(c=!1);var d=0;for(d=0;d<this.pendingJobs.length;d++)if(c){if(this.pendingJobs[d].key==a&&"Pending"==this.pendingJobs[d].status){this.pendingJobs[d].status=b;break}}else if(this.pendingJobs[d].name==a&&"Pending"==this.pendingJobs[d].status){this.pendingJobs[d].status=b;break}"Success"==b&&this.pendingJobs.splice(d,1)},b.prototype.unselectSpeechLines=function(){for(var a=0,b=this.speechLibrary;a<b.length;a++){b[a].isSelected.list=!1}this.selectAllCheckBoxRef.nativeElement.checked=!1,this.selectedSpeechesNum=0,this.selectedSpeechIDs=[]},b.prototype.parseCsvFile=function(a){this.papa.parse(a,{header:!0,dynamicTyping:!0,complete:function(a){var b=this;this.importableSpeechesData=a.data,this.currentCustomMappings={};this.customMappingsLoaded=!1,this._apiHandler.getCustomMappings().subscribe(function(a){for(var c=JSON.parse(a.body.text()),d=c.result.mappings,e=0,f=b.customFields;e<f.length;e++){var g=f[e];b.currentCustomMappings[g]=g in d?d[g]:""}b.mode=l.Import},function(a){b.mode=l.Import,b.toastr.error("The most recent custom mappings were not loaded correctly."+a.message)})}.bind(this)})},b.prototype.playAudio=function(a){var b=this.generateWavBuffer(a);this.audioContext.decodeAudioData(b,function(a){var b=this.audioContext.createBufferSource();b.buffer=a,b.connect(this.audioContext.destination),b.start(0)}.bind(this),function(a){this.toastr.error("Error with decoding audio data.")}.bind(this))},b.prototype.generateWavBuffer=function(a){var b=this.generateWavHeader(a.byteLength),c=new Uint8Array(b.byteLength+a.byteLength);return c.set(new Uint8Array(b),0),c.set(new Uint8Array(a),b.byteLength),c.buffer},b.prototype.generateWavHeader=function(a){for(var b=1,c=16e3,d=2,e=b*d,f=c*e,g=a,h=new ArrayBuffer(44),i=new DataView(h),j=[{data:"RIFF",type:"string",startPosition:0},{data:g+36,type:"uint32",startPosition:4},{data:"WAVE",type:"string",startPosition:8},{data:"fmt ",type:"string",startPosition:12},{data:16,type:"uint32",startPosition:16},{data:1,type:"uint16",startPosition:20},{data:b,type:"uint16",startPosition:22},{data:c,type:"uint32",startPosition:24},{data:f,type:"uint32",startPosition:28},{data:e,type:"uint16",startPosition:32},{data:8*d,type:"uint16",startPosition:34},{data:"data",type:"string",startPosition:36},{data:g,type:"uint32",startPosition:40}],k=0,l=j;k<l.length;k++){var m=l[k];this.writeBuffer(m.data,m.type,m.startPosition,i)}return h},b.prototype.writeBuffer=function(a,b,c,d){if("string"==b)for(var e=0;e<a.length;e++)d.setUint8(c+e,a.charCodeAt(e));else"uint32"==b?d.setUint32(c,a,!0):"uint16"==b&&d.setUint16(c,a,!0)},b.prototype.downloadGeneratedPackages=function(){for(var a=0,b=this.generatedPackages;a<b.length;a++){var c=b[a];if(c.isSelected){var d=c.name.substring(0,c.name.length-4);this.getPackageUrl(d),c.isSelected=!1}}this.selectAlleneratedPackagesRef.nativeElement.checked=!1,this.selectedPackagesNum=0},b.prototype.updateSelectedSpeechesNum=function(a){if(a.isSelected.list){this.selectedSpeechesNum--;var b=this.selectedSpeechIDs.indexOf(a.character+a.line,0);b>-1&&this.selectedSpeechIDs.splice(b,1)}else this.selectedSpeechesNum++,this.selectedSpeechIDs.push(a.character+a.line)},b.prototype.updateSelectedPackgesNum=function(a){a.isSelected?this.selectedPackagesNum--:this.selectedPackagesNum++},b.prototype.defaultSpeech=function(){return new g.SpeechEntry({character:"",line:"NewSpeechLine_0",tags:[],isSelected:{import:!1,list:!1},previewLabelText:"Preview",isEditing:!1,uploaded:!1})},b.prototype.defaultCharacter=function(){return new g.CharacterEntry({name:"NewCharacter_0",voice:"Joanna",speechMarksStatus:[{name:"SSML",isChecked:!0},{name:"Viseme",isChecked:!0},{name:"Sentence/Word",isChecked:!0}],previewLabelText:"Preview",speechMarks:"SVT",isEditing:!1,uploaded:!1})},b.prototype.sort=function(a,b,c,d,e){for(var f=a,g=b,h=c[Math.floor((a+b)/2)];f<=g;){if("asc"==e){for(;c[f][d].toLowerCase()<h[d].toLowerCase();)f++;for(;c[g][d].toLowerCase()>h[d].toLowerCase();)g--}else if("desc"==e){for(;c[f][d].toLowerCase()>h[d].toLowerCase();)f++;for(;c[g][d].toLowerCase()<h[d].toLowerCase();)g--}if(f<=g){var i=JSON.parse(JSON.stringify(c[f]));c[f]=JSON.parse(JSON.stringify(c[g])),c[g]=JSON.parse(JSON.stringify(i)),f++,g--}}a<g&&this.sort(a,g,c,d,e),f<b&&this.sort(f,b,c,d,e)},b.prototype.verifyMappings=function(a){for(var b=0,c=this.customFields;b<c.length;b++){var d=c[b];if(""!=this.currentCustomMappings[a]&&"tag"!=this.currentCustomMappings[a]&&d!=a&&this.currentCustomMappings[d]==this.currentCustomMappings[a])return!1}return!0},o([d.Input(),p("design:type",Object)],b.prototype,"context",void 0),o([d.ViewChild(e.ModalComponent),p("design:type",e.ModalComponent)],b.prototype,"modalRef",void 0),o([d.ViewChild(j.PaginationComponent),p("design:type",j.PaginationComponent)],b.prototype,"paginationRef",void 0),o([d.ViewChild("import"),p("design:type",d.ElementRef)],b.prototype,"importButtonRef",void 0),o([d.ViewChild("selectAllSpeeches"),p("design:type",d.ElementRef)],b.prototype,"selectAllCheckBoxRef",void 0),o([d.ViewChild("selectAllGeneratedPackages"),p("design:type",d.ElementRef)],b.prototype,"selectAlleneratedPackagesRef",void 0),o([d.ViewChild("speechLibTabArea"),p("design:type",d.ElementRef)],b.prototype,"speechLibTabAreaRef",void 0),o([d.ViewChild("charactersTabArea"),p("design:type",d.ElementRef)],b.prototype,"charactersTabAreaRef",void 0),o([d.ViewChild("play"),p("design:type",d.ElementRef)],b.prototype,"playRef",void 0),b=o([d.Component({selector:"text-to-speech-index",template:'<facet-generator [context]="context"                  [tabs]="[\'Speech Library\', \'Characters\', \'Generated Packages\', \'Settings\']"                  (tabClicked)="getSubNavItem($event)" [metricIdentifier]="context.identifier"></facet-generator>  <div #speechLibTabArea *ngIf="subNavActiveIndex == 0" (click)="clickTabArea($event)">     <button class="btn l-primary" (click)="addNewRow()">         New Speech Line     </button>     <button class="btn btn-outline-primary" (click)="clickImportButton()" data-toggle="tooltip" data-placement="right" title="The CSV format can be defined as you see fit.  The next step of the import will ask you to define the mappings for your file.">         Import .csv     </button>     <input #import class="import" type="file" (change)="getImportableSpeeches($event)" accept=".csv" />     <label class="number float-right">{{pendingJobs.length}}</label>     <ng-template #popContent class="popover-content">         <div *ngIf="pendingJobs.length > 0">             <div *ngFor="let pendingJob of pendingJobs">                 <label>{{pendingJob["name"]}}</label>                 <span [ngSwitch]="pendingJob[\'status\']">                     <i *ngSwitchCase="\'Pending\'" class="fa fa-spinner fa-spin float-right" aria-hidden="true"></i>                     <i *ngSwitchCase="\'Success\'" class="fa fa-check download-succeeded float-right" aria-hidden="true"></i>                     <i *ngSwitchCase="\'Failure\'" class="fa fa-times download-failed float-right" aria-hidden="true"></i>                 </span>             </div>             <div class="clear-pending-jobs">                 <button class="btn btn-outline-primary clear-button" (click)="clearPendingJobsList()">Clear</button>             </div>         </div>         <div *ngIf="pendingJobs.length == 0">             No pending download jobs         </div>     </ng-template>     <i [ngClass]="pendingJobs.length > 0 ? \'fa fa-cloud-download float-right pending-jobs-exist\' : \'fa fa-cloud-download float-right no-pending-jobs\'" aria-hidden="true" [ngbPopover]="popContent" placement="left" popoverTitle="Pending Downloads"></i>     <button class="btn l-primary float-right" [disabled]="!selectedSpeechesNum > 0" (click)="downloadModal()">         Download Speech Files (.zip)     </button>     <button class="btn l-primary delete-button float-right" [disabled]="!selectedSpeechesNum > 0" (click)="deleteMultipleSpeechesModal()">         Delete     </button>     <label class="number float-right">{{selectedSpeechesNum}} Selected</label>     <div [ngSwitch]="isLoadingSpeechLibrary">         <div *ngSwitchCase="true">             <div class="loading-spinner-container">                 <i class="fa fa-spinner fa-spin fa-lg" aria-hidden="true"></i>             </div>         </div>         <div class="content-container" *ngSwitchCase="false">             <div *ngIf="(!speechLibrary || speechLibrary.length == 0) && !tagFilterApplied">                 No Speech Library             </div>             <div *ngIf="speechLibrary.length > 0 || tagFilterApplied">                 <table class="table table-hover speech-lib float-left">                     <thead>                         <tr>                             <th class="select-column">                                 <input #selectAllSpeeches type="checkbox" [id]="\'select-all-speeches\'" name="\'select-all-speeches\'" (change)="selectAll($event, speechLibrary, \'list\')">                                 <label [attr.for]="\'select-all-speeches\'"></label>                             </th>                             <th class="character-column">                                 <span (click)="sortTable(\'SpeechLibrary\')">                                     CHARACTER                                     <i *ngIf="this.sortDir == \'asc\'" class="fa fa-sort-amount-asc" aria-hidden="true"></i>                                     <i *ngIf="this.sortDir == \'desc\'" class="fa fa-sort-amount-desc" aria-hidden="true"></i>                                 </span>                                 <i [ngClass]="characterFilterApplied ? \'fa fa-filter filtered\' : \'fa fa-filter\'" aria-hidden="true" (click)="openCharacterFilter()"></i>                                 <div class="btn-group">                                     <div [ngClass]="characterFilterOpen ? \'dropdown-menu\' : \'dropdown-menu-hide\'">                                         <input type="text" class="filter-input" [(ngModel)]="characterFilterText" placeholder="Search characters..." />                                         <ul class="filter-list">                                             <li *ngFor="let character of filterCharacterList">                                                 <div *ngIf="character.name.toLowerCase().includes(characterFilterText.toLowerCase())">                                                     <input type="checkbox" [id]="character.name" [name]="character.name" [(ngModel)]="character.isSelected"/>                                                     <label class="l-checkbox" [attr.for]="character.name">                                                         {{character.name}}                                                     </label>                                                 </div>                                             </li>                                         </ul>                                         <div class="dropdown-element">                                             <hr>                                             <button class="btn l-primary edit-button float-right" (click)="applyFilter()">Apply</button>                                             <button class="btn btn-outline-primary edit-button float-right" (click)="cancelCharacterFilter()">Cancel</button>                                         </div>                                     </div>                                 </div>                                 <span *ngIf="characterFilterApplied" class="filtered" (click)="openCharacterFilter()">                                     Filtered                                 </span>                             </th>                             <th class="line-column"> SPEECH LINE </th>                             <th class="preview-column"></th>                             <th class="tags-column">                                 TAGS                                 <i [ngClass]="tagFilterApplied ? \'fa fa-filter filtered\' : \'fa fa-filter\'" aria-hidden="true" (click)="openTagFilter()"></i>                                 <div class="btn-group">                                     <div [ngClass]="tagFilterOpen ? \'dropdown-menu\' : \'dropdown-menu-hide\'">                                         <input type="text" class="filter-input" [(ngModel)]="tagFilterText" placeholder="Search tags..." />                                         <ul class="filter-list">                                             <li *ngFor="let tag of filterTagList">                                                 <div *ngIf="tag.name.toLowerCase().includes(tagFilterText.toLowerCase())">                                                     <input type="checkbox" [id]="tag.name" name="tag.name" [(ngModel)]="tag.isSelected" />                                                     <label class="l-checkbox" [attr.for]="tag.name">                                                         {{tag.name}}                                                     </label>                                                 </div>                                             </li>                                         </ul>                                         <div class="dropdown-element">                                             <hr>                                             Match                                             <select [(ngModel)]="tagsFilterLogic">                                                 <option value="And">All</option>                                                 <option value="Or">Any</option>                                             </select>                                             of the selected tags                                             <hr>                                             <button class="btn l-primary edit-button float-right" (click)="applyFilter()">Apply</button>                                             <button class="btn btn-outline-primary edit-button float-right" (click)="cancelTagFilter()">Cancel</button>                                         </div>                                     </div>                                 </div>                                 <span *ngIf="tagFilterApplied" class="filtered" (click)="openTagFilter()">                                     Filtered                                 </span>                             </th>                             <th class="control-column"></th>                         </tr>                     </thead>                     <tbody>                         <tr *ngFor="let speech of speechLibOnCurrentPage let i = index" [ngClass]="i == 0 && highlightNewRow? \'new-row\' : \'\'">                             <td class="select-column">                                 <input type="checkbox" [id]="speech.character + speech.line" [(ngModel)]="speech.isSelected.list" (click)="updateSelectedSpeechesNum(speech)">                                 <label [attr.for]="speech.character + speech.line"></label>                             </td>                             <td class="character-column" (click)="selectCurrentRow(speech)">                                 <select [(ngModel)]="speech.character" (click)="onEditableFieldsClicked(speech)" [ngClass]="characterNames.includes(speech.character) ? \'valid-selection\' : \'invalid-selection\'">                                     <option *ngIf="!characterNames.includes(speech.character)" [ngValue]="speech.character">{{speech.character}}</option>                                     <option *ngFor="let character of characterNames" [ngValue]="character">{{character}}</option>                                 </select>                             </td>                             <td class="line-column" (click)="selectCurrentRow(speech)">                                 <inline-editing [(content)]="speech.line" type="text" (startEditing)="onEditableFieldsClicked(speech)" [isEditing]="speech.isEditing"></inline-editing>                             </td>                             <td class="preview-column">                                 <i [ngClass]="speech.previewLabelText == \'Preview\' ? \'fa fa-volume-up preview-icon\' : \'fa fa-refresh fa-spin preview-icon\'" data-toggle="tooltip" data-placement="top" title="Preview" (click)="preview(speech, \'speech\')"></i>                                 <label class="preview-label" (click)="preview(speech, \'speech\')">{{speech.previewLabelText}}</label>                             </td>                             <td class="tags-column" (click)="selectCurrentRow(speech)">                                 <inline-editing [(content)]="speech.tags" type="tags" (startEditing)="onEditableFieldsClicked(speech)" [isEditing]="speech.isEditing"></inline-editing>                             <td (click)="selectCurrentRow(speech)">                                 <div class="float-right">                                     <span *ngIf="speech.isEditing">                                         <button class="btn l-primary edit-button" (click)="save(speech)">Save</button>                                         <button class="btn btn-outline-primary edit-button" (click)="cancel(speech)">Cancel</button>                                     </span>                                     <i (click)="deleteModal(speech)" class="fa fa-trash-o delete-icon" data-toggle="tooltip" data-placement="top" title="Delete"></i>                                 </div>                             </td>                         </tr>                     </tbody>                 </table>                 <div class="web-gl float-right">                     <label>FACIAL RIG PREVIEW</label>                     <i class="fa fa-question-circle-o question-mark" aria-hidden="true" placement="top" ngbTooltip="Preview the audio and the lip sync."></i>                     <div class="container rectangular-box">                         <div class="row">                             <iframe id="playvisemes" class="fbx-view" src="https://m.media-amazon.com/images/I/91XDP5dWVvL.html?fbxfile=https://m.media-amazon.com/images/I/B1PsuiLXSQS.fbx&posesfile=https://m.media-amazon.com/images/G/01/cloudcanvas/didimo/poses_diff_auto._V519600406_.json"></iframe>                         </div>                         <div class="row justify-content-center">                             <a href="http://www.mydidimo.com/" target="didimo" style="max-width:50%;" data-toggle="tooltip" data-placement="left" title="Preview provided by MyDidimo.com"><img src="https://m.media-amazon.com/images/G/01/cloudcanvas/didimo/logo_mydidimo_final._V518016670_.png" border="0" /></a>                         </div>                         <div class="row justify-content-center">                             Preview provided by&nbsp;<a href="http://www.mydidimo.com/" target="didimo">MyDidimo.com</a>                         </div>                         <div class="row">                             <a #play href="{{previewUrl}}"                                onclick="document.getElementById(\'playvisemes\').contentWindow.postMessage(this.href, \'https://m.media-amazon.com\'); return false;"></a>                         </div>                     </div>                 </div>             </div>         </div>         <div class="page">             <pagination [pages]="speechLinePages"                         (pageChanged)="updatePageContent($event)" (click)="saveCurrentEditing()"></pagination>         </div>     </div> </div> <div *ngIf="subNavActiveIndex == 1">         <button class="btn l-primary" (click)="addNewRow()">         New Character     </button>     <div [ngSwitch]="isLoadingCharacters">         <div *ngSwitchCase="true">             <div class="loading-spinner-container">                 <i class="fa fa-spinner fa-spin fa-lg" aria-hidden="true"></i>             </div>         </div>         <div class="content-container" *ngSwitchCase="false">             <div *ngIf="!characters || characters.length == 0">                 No character             </div>             <div *ngIf="characters.length > 0">                 <table class="table table-hover">                     <thead>                         <tr>                             <th class="character-name-column" (click)="sortTable(\'Characters\')">                                 NAME                                 <i *ngIf="this.sortDir == \'asc\'" class="fa fa-sort-amount-asc" aria-hidden="true"></i>                                 <i *ngIf="this.sortDir == \'desc\'" class="fa fa-sort-amount-desc" aria-hidden="true"></i>                             </th>                             <th class="language-column"> NATIVE LANGUAGE </th>                             <th class="voice-column"> VOICE </th>                             <th class="speechmark-column">                                 SPEECH MARKS                                 <i class="fa fa-question-circle-o question-mark" aria-hidden="true" placement="top" [ngbTooltip]="speechMarksTip"></i>                             </th>                             <th class="control-column"></th>                         </tr>                     </thead>                     <tbody>                         <tr *ngFor="let character of charactersOnCurrentPage; let i = index" [ngClass]="i == 0 && highlightNewRow? \'new-row\' : \'\'">                             <td class="character-name-column">                                 <inline-editing [(content)]="character.name" type="text" (startEditing)="onEditableFieldsClicked(character)" [isEditing]="character.isEditing"></inline-editing>                             </td>                             <td class="language-column">                                 <select [(ngModel)]="character.language" (ngModelChange)="onLanguageChanged(character)" (click)="onEditableFieldsClicked(character)">                                     <option *ngFor="let language of languages" [ngValue]="language">{{language}}</option>                                 </select>                             </td>                             <td class="voice-column">                                 <select [(ngModel)]="character.voice" (click)="onEditableFieldsClicked(character)">                                     <option *ngFor="let voice of character.voiceList" [ngValue]="voice.voiceId">{{voice.voiceId + \', \' + voice.gender}}</option>                                 </select>                             </td>                             <td class="speechmark-column">                                 <span *ngFor="let speechmark of character.speechMarksStatus">                                     <input type="checkbox" [id]="character.name + character.line + speechmark.name" [(ngModel)]="speechmark.isChecked" (change)="onSpeechMarksChanged(character, speechmark.name)">                                     <label [attr.for]="character.name + character.line + speechmark.name">{{speechmark.name}}</label>                                 </span>                             </td>                             <td>                                 <div class="float-right">                                     <span *ngIf="character.isEditing">                                         <button class="btn l-primary edit-button" (click)="save(character)">Save</button>                                         <button class="btn btn-outline-primary edit-button" (click)="cancel(character)">Cancel</button>                                     </span>                                     <i *ngIf="character.isUploaded" [ngClass]="character.previewLabelText == \'Preview\' ? \'fa fa-volume-up preview-icon\' : \'fa fa-refresh fa-spin preview-icon\'" data-toggle="tooltip" data-placement="top" title="Preview" (click)="preview(character, \'character\')"></i>                                     <label *ngIf="character.isUploaded" class="preview-label" (click)="preview(character, \'character\')">{{character.previewLabelText}}</label>                                     <i (click)="editModal(character)" class="fa fa-cog" data-toggle="tooltip" data-placement="top" title="Edit SSML Tags"></i>                                     <i (click)="deleteModal(character)" class="fa fa-trash-o delete-icon" data-toggle="tooltip" data-placement="top" title="Delete"></i>                                 </div>                             </td>                         </tr>                     </tbody>                 </table>             </div>             <pagination [pages]="characterPages"                         (pageChanged)="updatePageContent($event)" (click)="saveCurrentEditing()"></pagination>         </div>     </div> </div> <div *ngIf="subNavActiveIndex == 2">     <button class="btn l-primary float-right" [disabled]="!selectedPackagesNum > 0" (click)="downloadModal()">         Download Generated Packages     </button>     <label class="number float-right">{{selectedPackagesNum}} Selected</label>     <div [ngSwitch]="isLoadingGeneratedPackages">         <div *ngSwitchCase="true">             <div class="loading-spinner-container">                 <i class="fa fa-spinner fa-spin fa-lg" aria-hidden="true"></i>             </div>         </div>         <div class="content-container" *ngSwitchCase="false">             <div *ngIf="!generatedPackages || generatedPackages.length == 0">                 No generated packages             </div>             <div *ngIf="generatedPackages.length > 0">                 <table class="table table-hover">                     <thead>                         <tr>                             <th class="select-column">                                 <input #selectAllGeneratedPackages type="checkbox" [id]="\'select-all-packages\'" name="\'select-all-packages\'" (change)="selectAll($event, generatedPackages)">                                 <label [attr.for]="\'select-all-packages\'"></label>                             </th>                             <th class="package-name-column" (click)="sortTable(\'SpeechLibrary\')">                                 NAME                                 <i *ngIf="this.sortDir == \'asc\'" class="fa fa-sort-amount-asc" aria-hidden="true"></i>                                 <i *ngIf="this.sortDir == \'desc\'" class="fa fa-sort-amount-desc" aria-hidden="true"></i>                             </th>                             <th class="last-modified-column"> LAST MODIFIED </th>                             <th class="size-column"> SIZE (MB) </th>                         </tr>                     </thead>                     <tbody>                         <tr *ngFor="let generatedPackage of generatedPackagesOnCurrentPage">                             <td class="select-column">                                 <input type="checkbox" [id]="generatedPackage.name" [(ngModel)]="generatedPackage.isSelected" (click)="updateSelectedPackgesNum(generatedPackage)">                                 <label [attr.for]="generatedPackage.name"></label>                             </td>                             <td class="package-name-column">                                 {{generatedPackage.name}}                             </td>                             <td class="last-modified-column">                                 {{generatedPackage.lastModified}}                             </td>                             <td class="size-column">                                 {{(generatedPackage.size / 1048576).toFixed(3)}}                             </td>                             <td>                                 <i (click)="deleteModal(generatedPackage)" class="fa fa-trash-o delete-icon float-right" data-toggle="tooltip" data-placement="top" title="Delete"></i>                             </td>                         </tr>                     </tbody>                 </table>             </div>         </div>         <pagination [pages]="generatedPackagesPages"                     (pageChanged)="updatePageContent($event)"></pagination>     </div> </div> <div *ngIf="subNavActiveIndex == 3">     <div [ngSwitch]="isLoadingSettings">         <div *ngSwitchCase="true">             <div class="loading-spinner-container">                 <i class="fa fa-spinner fa-spin fa-lg" aria-hidden="true"></i>             </div>         </div>         <div *ngSwitchCase="false">             <div class="form-group row">                 <p class="col-10">                     <label class="settings-label">                         Runtime Capabilities                         <i class="fa fa-question-circle-o question-mark" aria-hidden="true" placement="top" ngbTooltip="If you disable the runtime capabilities, you will not be able to use a game client to generate speech files."></i>                     </label>                     <switch-button [(enabled)]="runtimeCapabilitiesEnabled" (switch)="switchRuntimeCapabilitiesStatus()"></switch-button>                 </p>             </div>             <div class="form-group row">                 <p class="col-10">                     <label class="settings-label">                         Runtime Caching                         <i class="fa fa-question-circle-o question-mark" aria-hidden="true" placement="top" ngbTooltip="If you disable the runtime caching, files created from game clients will expire after one day."></i>                     </label>                     <switch-button [(enabled)]="runtimeCacheEnabled" (switch)="switchRuntimeCacheStatus()"></switch-button>                 </p>             </div>         </div>     </div> </div>  \x3c!-- Delete modal --\x3e <modal *ngIf="mode == Modes.Delete"        [title]="getDeleteModalTitle()"        [autoOpen]="true"        [hasSubmit]="true"        [onDismiss]="dismissModal"        [onClose]="dismissModal"        [submitButtonText]="\'Delete\'"        (modalSubmitted)="deleteMultipleSpeeches ? deleteSelectedSpeeches() : delete()"        [metricIdentifier]="context.identifier">     <div class="modal-body">         <div *ngIf="subNavActiveIndex == 0">             <div *ngIf="!deleteMultipleSpeeches">                 <p> Are you sure you want to delete this speech?</p>                 <pre>{{currentSpeech | json | devonly}}</pre>             </div>             <div *ngIf="deleteMultipleSpeeches">                 <p> Are you sure you want to delete the selected speeches?</p>             </div>         </div>         <div *ngIf="subNavActiveIndex == 1">             <p> Are you sure you want to delete this character?</p>             <pre>{{currentCharacter | json | devonly}}</pre>         </div>         <div *ngIf="subNavActiveIndex == 2">             <p> Are you sure you want to delete this package?</p>             <pre>{{currentpackage | json | devonly}}</pre>         </div>     </div> </modal>  \x3c!-- Import speeches modal --\x3e <modal *ngIf="mode == Modes.Import"        [title]="\'Import\'"        [autoOpen]="true"        [hasSubmit]="true"        [onDismiss]="dismissModal"        [onClose]="dismissModal"        [submitButtonText]="\'Continue\'"        (modalSubmitted)="customMappingsLoaded ? importSelectedSpeeches() : listImportableSpeeches()"        [metricIdentifier]="context.identifier">     <div class="modal-body">         <div [ngSwitch]="customMappingsLoaded">             <div *ngSwitchCase="true">                 <table class="table table-hover">                     <thead>                         <tr>                             <th class="select-column">                                 <input type="checkbox" [id]="\'select-all-new\'" name="\'select-all-new\'" (change)="selectAll($event, importableSpeeches, \'import\')">                                 <label [attr.for]="\'select-all-new\'"></label>                             </th>                             <th class="character-column"> CHARACTER </th>                             <th class="line-column"> SPEECH LINE </th>                             <th class="metadata-column"> TAGS </th>                         </tr>                     </thead>                     <tbody>                         <tr *ngFor="let speech of importableSpeeches">                             <td class="select-column">                                 <input type="checkbox" [id]="speech.character + speech.line" [(ngModel)]="speech.isSelected.import">                                 <label [attr.for]="speech.character + speech.line"></label>                             </td>                             <td class="character-column">{{speech.character}}</td>                             <td class="line-column">  {{speech.line}} </td>                             <td class="tags-column">                                 <tag *ngFor="let tag of speech.tags" [tagName]="tag" [isEditing]="false"></tag>                             <td>                         </tr>                     </tbody>                 </table>             </div>             <div *ngSwitchCase="false">                 <table class="table table-hover">                     <thead>                         <tr>                             <th class="csv-header-column"> CSV Header </th>                             <th class="csv-value-column"> First CSV Value </th>                             <th class="mappings-column"> Map To </th>                         </tr>                     </thead>                     <tbody>                         <tr *ngFor="let field of customFields">                             <td class="csv-header-column">{{field}}</td>                             <td class="csv-value-column">{{importableSpeechesData[0][field]}}</td>                             <td class="mappings-column">                                 <select [(ngModel)]="currentCustomMappings[field]" [ngClass]="verifyMappings(field) ? \'valid-selection\' : \'invalid-selection\'">                                     <option ngValue=""></option>                                     <option ngValue="character">Character</option>                                     <option ngValue="line">Line</option>                                     <option ngValue="tag">Tag</option>                                 </select>                             <td>                         </tr>                     </tbody>                 </table>             </div>         </div>     </div> </modal>  \x3c!-- Download speeches modal --\x3e <modal *ngIf="mode == Modes.Download"        title="Download Speech Files"        [autoOpen]="true"        [hasSubmit]="true"        [onDismiss]="dismissModal"        [onClose]="dismissModal"        [submitButtonText]="\'Download\'"        (modalSubmitted)="downloadSpeeches()"        [metricIdentifier]="context.identifier">     <div class="modal-body">         <form>             <div class="form-group row">                 <label class="col-3 col-form-label affix">File Name</label>                 <span class="col-8">                     <input type="text" class="form-control" [(ngModel)]="zipFileName" name="zip-file-name" placeholder="MySpeechFiles">                 </span>                 <label class="col-form-label affix">.zip</label>             </div>             <div>                 <label>{{downloadDescriptionText}}</label>             </div>         </form>     </div> </modal>  \x3c!-- Edit character SSML tags modal --\x3e <modal *ngIf="mode == Modes.Edit"        title="Advanced Settings"        [autoOpen]="true"        [hasSubmit]="true"        [onDismiss]="dismissModal"        [onClose]="dismissModal"        [submitButtonText]="\'Save\'"        (modalSubmitted)="savessmlTag()"        [metricIdentifier]="context.identifier">     <div class="modal-body">         <form>             <div *ngFor="let ssmlProsodyTagType of ssmlProsodyTagTypes">                 <div class="form-group row">                     <label class="col-3 col-form-label affix capitalize">{{ssmlProsodyTagType}}</label>                     <div class="col-4">                         <select class="form-control" [name]="ssmlProsodyTagType" [(ngModel)]="currentCharacter.ssmlProsodyTagMappings[ssmlProsodyTagType]">                             <option *ngFor="let ssmlProsodyTagValue of prosody[ssmlProsodyTagType]" [ngValue]="ssmlProsodyTagValue">{{ssmlProsodyTagValue}}</option>                         </select>                     </div>                 </div>             </div>             <div class="form-group row">                 <label class="col-3 col-form-label affix capitalize">                     Language Override                     <i class="fa fa-question-circle-o question-mark" aria-hidden="true" placement="bottom" ngbTooltip="You can override your character\'s native language and let him/her speak another language with better rendered accent."></i>                 </label>                 <div class="col-4">                     <select class="form-control" name="languageOverride" [(ngModel)]="currentCharacter.ssmlLanguage">                         <option *ngFor="let language of languages" [ngValue]="voices[language][0][\'languageCode\']">{{language}}</option>                     </select>                 </div>             </div>             <div class="form-group row">                 <label class="col-3 col-form-label affix capitalize">                     timbre ({{currentCharacter.timbre}}%)                 </label>                 <div class="col-4">                     <input class="form-control timbre-range" type="range" name="timbre" min="50" max="200" [(ngModel)]="currentCharacter.timbre">                 </div>                 <div class="col-1 reset-timbre">                     <i class="fa fa-undo" aria-hidden="true" (click)="resetTimbre()"></i>                 </div>             </div>         </form>     </div> </modal>',styles:[".loading-spinner-container{clear:both;text-align:center}.delete-button{margin-right:5px}.number{margin-top:8px;margin-right:5px}.no-pending-jobs,.pending-jobs-exist{margin:8px 3px 0px 5px}.pending-jobs-exist{color:#6441A5}.download-succeeded{color:#8fbc8f}.download-failed{color:#d63a32}.clear-pending-jobs{text-align:center}.clear-pending-jobs .clear-button{width:170px;padding-left:70px}.preview-icon{margin-top:8px;color:#6441A5}.preview-label{color:#6441A5}.edit-button{margin-left:2px}.delete-icon{margin-top:8px;margin-left:2px}.filtered{color:#6441A5;cursor:pointer}.filter-input{width:100%}.fa-filter:hover{cursor:pointer}.speech-lib{width:80%}.web-gl{margin-top:10px;width:15%}.web-gl .rectangular-box{border:1px solid black;padding:20px 10px 20px 10px}.web-gl .rectangular-box .fbx-view{height:300px;width:100%}.page{clear:both}table.table{margin-bottom:30px}table.table thead{display:table-header-group}table.table input:focus{outline:none}table.table tr .select-column{width:5%}table.table tr .character-column{width:20%}table.table tr .line-column{width:20%}table.table tr .preview-column{width:10%}table.table tr .speechmark-column{width:30%}table.table tr .character-name-column{width:15%}table.table tr .voice-column{width:15%}table.table tr .language-column{width:15%}table.table tr .tags-column{width:30%}table.table tr .csv-header-column{width:30%}table.table tr .csv-value-column{width:30%}table.table tr .mappings-column{width:30%}table.table tr .package-name-column{width:25%}table.table tr .last-modified-column{width:25%}table.table tr .size-column{width:25%}table.table tr .valid-selection{color:black}table.table tr .invalid-selection{color:red}table.table th .dropdown-menu{padding:10px 10px;display:block}table.table th .dropdown-menu-hide{display:none}table.table th .filter-list{height:200px;overflow:auto;list-style-type:none;padding:10px 10px 0px 0px;margin-top:10px;margin-bottom:0px}table.table th .dropdown-element{width:100%}.content-container{margin-bottom:30px}.settings-label{width:150px;margin-bottom:30px}.import{display:none}.capitalize{text-transform:capitalize}.timbre-range,.timbre-range:hover{padding:0 0;border:0}.reset-timbre{margin-top:8px}"]}),p("design:paramtypes",[c.Http,f.AwsService,i.ToastsManager,d.ViewContainerRef,k.LyMetricService])],b)}(h.AbstractCloudGemIndexComponent),a("TextToSpeechIndexComponent",m)}}}),a.register("34",["10","37","11","6"],function(a,b){"use strict";var c,d,e,f,g,h=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=f<3?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(f<3?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g};b&&b.id;return{setters:[function(a){c=a},function(a){d=a},function(a){e=a},function(a){f=a}],execute:function(){g=function(){function a(){}return a=h([f.NgModule({imports:[e.GameSharedModule,c.GemModule],declarations:[d.TextToSpeechIndexComponent,d.TextToSpeechThumbnailComponent],providers:[],bootstrap:[d.TextToSpeechThumbnailComponent,d.TextToSpeechIndexComponent]})],a)}(),a("CloudGemTextToSpeechModule",g)}}}),a.register("37",["35","36","38","39","34"],function(a,b){"use strict";function c(b){var c={};for(var d in b)"default"!==d&&(c[d]=b[d]);a(c)}b&&b.id;return{setters:[function(a){c(a)},function(a){c(a)},function(a){c(a)},function(a){c(a)},function(a){c(a)}],execute:function(){}}}),a.register("33",["37"],function(a,b){"use strict";function c(a){return d.CloudGemTextToSpeechModule}b&&b.id;a("definition",c);var d;return{setters:[function(a){d=a}],execute:function(){}}})})(function(a){if("function"==typeof define&&define.amd)define(["app/shared/class/index.js","app/view/game/module/cloudgems/class/index.js","@angular/core","@angular/http","app/aws/aws.service.js","app/shared/service/index.js","app/shared/component/index.js","ng2-toastr/ng2-toastr.js","app/view/game/module/shared/component/index.js","app/view/game/module/cloudgems/gem.module.js","app/view/game/module/shared/shared.module.js"],a);else{if("object"!=typeof module||!module.exports||"function"!=typeof require)throw new Error("Module must be loaded as AMD or CommonJS");module.exports=a(require("app/shared/class/index.js"),require("app/view/game/module/cloudgems/class/index.js"),require("@angular/core"),require("@angular/http"),require("app/aws/aws.service.js"),require("app/shared/service/index.js"),require("app/shared/component/index.js"),require("ng2-toastr/ng2-toastr.js"),require("app/view/game/module/shared/component/index.js"),require("app/view/game/module/cloudgems/gem.module.js"),require("app/view/game/module/shared/shared.module.js"))}});