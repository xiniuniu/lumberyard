########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################

def build(bld):

    bld.DefineGem(
        # Add custom build options here
        use             = ['GridMate', 'AWSNativeSDKInit'],
        includes        = [bld.Path('Code/CryEngine/CryCommon'),
                           bld.Path('Code/CryEngine/CryAction'),
                           bld.Path('Code/CryEngine/CryNetwork'),
                           bld.Path('Gems/Multiplayer/Code/Include')
                          ],
        pch             = '',
        file_list       = ['GameLift.waf_files'],

        # Platform Roots
        platform_roots = [bld.PlatformRoot('Source/Platform', export_includes=True)],

        # Platform Specific
        win_use         = ['AWS_CPP_SDK_GAMELIFT_SHARED',
                           'AWS_CPP_SDK_CORE'],
        win_debug_dedicated_uselib = ['AWS_GAMELIFT_SERVER_SHARED'],
        win_profile_dedicated_uselib = ['AWS_GAMELIFT_SERVER_SHARED'],
        win_performance_dedicated_uselib = ['AWS_GAMELIFT_SERVER_STATIC'],
        win_release_dedicated_uselib = ['AWS_GAMELIFT_SERVER_STATIC'],
        win_lib         = ['gdi32', 'WinHTTP', 'Ws2_32', 'mswsock'],
        win_file_list   = ['gridmate_gamelift.waf_files'],

        linux_debug_dedicated_uselib = ['AWS_GAMELIFT_SERVER_STATIC'],
        linux_profile_dedicated_uselib = ['AWS_GAMELIFT_SERVER_STATIC'],
        linux_performance_dedicated_uselib = ['AWS_GAMELIFT_SERVER_STATIC'],
        linux_release_dedicated_uselib = ['AWS_GAMELIFT_SERVER_STATIC'],
        linux_file_list   = ['gridmate_gamelift.waf_files'],

        android_use = ['AWS_CPP_SDK_GAMELIFT_SHARED',
                        'AWS_CPP_SDK_CORE'],
        android_file_list = ['gridmate_gamelift.waf_files'],

        ios_use = ['AWS_CPP_SDK_GAMELIFT_SHARED',
                    'AWS_CPP_SDK_CORE'],
        ios_file_list = ['gridmate_gamelift.waf_files'],

        # Testing
        test_all_file_list = ['gamelift_test.waf_files'],
    )
