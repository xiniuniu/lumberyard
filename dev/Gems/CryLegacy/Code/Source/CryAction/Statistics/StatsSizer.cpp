/*
* All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
* its licensors.
*
* For complete copyright and license terms please see the LICENSE at the root of this
* distribution (the "License"). All use of this software is governed by the License,
* or, if provided, by the license below or the license accompanying this file. Do not
* remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*
*/
// Original file Copyright Crytek GMBH or its affiliates, used under license.

#include "CryLegacy_precompiled.h"
#include "StatsSizer.h"

//////////////////////////////////////////////////////////////////////////
// CStatsSizer
//////////////////////////////////////////////////////////////////////////

CStatsSizer::CStatsSizer()
    : m_size(0)
    , m_count(0)
{ }

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::Release()
{ }

//////////////////////////////////////////////////////////////////////////
void CStatsSizer::Reset()
{ }

//////////////////////////////////////////////////////////////////////////
void CStatsSizer::End()
{ }

//////////////////////////////////////////////////////////////////////////

size_t CStatsSizer::GetTotalSize()
{ return m_size; }

//////////////////////////////////////////////////////////////////////////

size_t CStatsSizer::GetObjectCount()
{ return m_count; }

//////////////////////////////////////////////////////////////////////////

bool CStatsSizer::AddObject(const void* pIdentifier, size_t nSizeBytes, int nCount)
{
    m_size += nSizeBytes;
    m_count++;
    return true;
}

//////////////////////////////////////////////////////////////////////////

static NullResCollector s_nullCollector;

IResourceCollector* CStatsSizer::GetResourceCollector()
{
    return &s_nullCollector;
}

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::SetResourceCollector(IResourceCollector*)
{
}

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::Push(const char* szComponentName)
{ }

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::PushSubcomponent (const char* szSubcomponentName)
{ }

//////////////////////////////////////////////////////////////////////////

void CStatsSizer::Pop()
{ }

//////////////////////////////////////////////////////////////////////////
