########################################################################################
#
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates, or
# a third party where indicated.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################


def build(bld):

    #Create a file list that is needed for the exported symbols in the dylib in a non-monolithic build
    darwinExportedSymbolFileList=[]
    if not bld.is_build_monolithic():
        darwinExportedSymbolFileList.append('resourcecompilerscene_darwin.waf_files');


    bld.CryResourceCompilerModule(
        # Settings
        target                  = 'ResourceCompilerScene',
        vs_filter               = 'RC',
        file_list               = 'resourcecompilerscene.waf_files',
        platforms               = ['win', 'darwin'],
        client_only             = True,
        exclude_monolithic      = True,
        includes                = ['.',
                                   bld.Path('Code/CryEngine/CryCommon'),
                                   bld.Path('Code/CryEngine/Cry3DEngine'),
                                   bld.Path('Code/Tools'),
                                   bld.Path('Code/Tools/RC/ResourceCompiler'),
                                   bld.Path('Code/Tools/RC/ResourceCompilerPC'),
                                   bld.Path('Code/Tools/CryCommonTools'),
                                   bld.Path('Code/Tools/AssetProcessor/AssetBuilderSDK')],
        use                     = ['AzCore',
                                   'AzFramework',
                                   'SceneCore',
                                   'SceneData',
                                   'FbxSceneBuilder',
                                   
                                   'AzToolsFramework', 
                                   'GFxFramework',
                                   'AssetBuilderSDK'],
        uselib                  = ['QT5CORE',
                                   'QT5GUI',
                                   'QT5WIDGETS',
                                   'FBXSDK'],
        features            	= ['qt5', 'link_running_program'],

        #Platform specific
        darwin_file_list        = darwinExportedSymbolFileList,

        # Testing
        win_test_all_file_list    = 'resourcecompilerscene_tests.waf_files',
    )
