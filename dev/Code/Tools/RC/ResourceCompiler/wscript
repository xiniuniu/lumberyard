########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#
# Original file Copyright Crytek GMBH or its affiliates, used under license.
#
########################################################################################

def build(bld):

    defines = []

    bld.CryResourceCompiler(
        # Settings
        output_file_name= 'rc',
        target          = 'ResourceCompiler',
        vs_filter       = 'RC',
        copyright_org   = 'Amazon-CryTek',
        file_list       = 'resourcecompiler.waf_files',
        platforms       = ['win', 'darwin'],
        client_only     = True,
        exclude_monolithic = True,
        features        = ['qt5'],
        use             = ['AzToolsFramework',
                           'AzFramework'],
        uselib          = ['QT5CORE',
                           'QT5GUI',
                           'QT5WIDGETS',
                           'ZLIB',
                           'ZSTD',
                           'DBG_HELP',
                           'D3D_COMPILER_47',
                           'PVR_TEX_TOOL',
                           'OPENGL32'],
        defines         = defines,
        includes        = ['.',
                           bld.Path('Code/CryEngine/CryCommon'), 
                           bld.Path('Code/Tools/CryCommonTools'),
                           bld.Path('Code/Tools/CryXML'),
                           bld.Path('Code/CryEngine/CrySystem/XML')],
        libpath         = [bld.Path('Code/Tools/CryCommonTools')],
        win_lib         = ['psapi', 'dbghelp'],

        copy_dependent_files =['Code/Tools/RC/Config/rc/RCJob*.xml',
                               'Code/Tools/RC/Config/rc/rc.ini',
                               'Code/Tools/RC/Config/rc/xmlfilter.txt'],

        darwin_rpath    = [ "@executable_path", "@executable_path/..", "@executable_path/../qtlibs/lib", "@executable_path/../../Frameworks" ],

        darwin_cflags   = ['-Wno-shift-count-overflow'],
        darwin_cxxflags = ['-Wno-shift-count-overflow'],

        win_x64_clang_cxxflags = ['-fexceptions'],

        # Testing
        test_all_file_list = ['resourcecompiler_test.waf_files'],

        win_additional_manifests = 'WindowsCompatibility.xml',
    )
