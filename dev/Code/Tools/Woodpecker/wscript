########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################

def build(bld):

    bld.CryQtApplication(
        # Settings
        target                      = 'LuaIDE',
        vs_filter                   = 'Tools',
        file_list                   = ['woodpecker.waf_files','lua_ide.waf_files'],
        win_file_list               = 'lua_ide_win.waf_files',
        platforms                   = ['win', 'darwin'],
        exclude_monolithic          = True,
        client_only                 = True,
        disable_pch                 = True,
        features                    = ['qt5','generate_rc_file', 'ExternalLyIdentity', 'ExternalLyMetrics'],
        includes                    = ['./Woodpecker/Editor', './Woodpecker/LUA'],
        use                         = ['AzCore',
                                       'AzFramework',
                                       'AzToolsFramework',
                                       'GridMateForTools',
                                       'AzQtComponents',
                                       'ToolsCrashHandler'] + bld.make_aws_library_task_list(['LyMetricsProducer', 'LyMetricsShared', 'LyIdentity']),
        uselib                      = ['QTANGLE',
                                       'QTMAIN',
                                       'QT5CORE',
                                       'QT5GUI',
                                       'QT5OPENGL',
                                       'QT5NETWORK',
                                       'QT5SVG',
                                       'QT5WIDGETS',
                                       'CRASHPAD',
                                       'D3D_COMPILER_47'
                                       ],
        defines                     = [ 'UNICODE', 'WOODPECKER_ENABLE_LUA_IDE' ],
        # Platform Specific
        msvc_cxxflags           = [
            '/W4', # warning level
        ],
        win_lib                 = [ 'shell32' ],
        darwin_uselib           = [ 'AWS_CPP_SDK_CORE',
                                    'AWS_CPP_SDK_COGNITO_IDENTITY',
                                    'AWS_CPP_SDK_MOBILEANALYTICS',
                                    'AWS_CPP_SDK_IDENTITY_MANAGEMENT' ],

        darwin_rpath    =         ['@executable_path', '@executable_path/qtlibs/lib'],
        darwin_frameworkpath    = [bld.ThirdPartyPath('qt', 'clang_64/lib')],
        clang_cxxflags          = [
            '-Wno-writable-strings',
        ]

    )

    bld.CryQtApplication(
        # Settings
        target                      = 'Profiler',
        vs_filter                   = 'Tools',
        file_list                   = ['woodpecker.waf_files','profiler.waf_files'],
        win_file_list               = 'profiler_win.waf_files',
        platforms                   = ['win', 'darwin'],
        exclude_monolithic          = True,
        client_only                 = True,
        disable_pch                 = True,
        features                    = ['qt5','generate_rc_file', 'ExternalLyIdentity', 'ExternalLyMetrics'],
        includes                    = ['./Woodpecker/Editor',
                                       './Woodpecker/Driller',
                                       './Woodpecker/Driller/Carrier',
                                       './Woodpecker/Driller/Profiler',
                                       './Woodpecker/Driller/IO'],
        use                         = ['AzCore',
                                       'AzFramework',
                                       'AzToolsFramework',
                                       'GridMateForTools'] + bld.make_aws_library_task_list(['LyMetricsProducer', 'LyMetricsShared', 'LyIdentity']),
        uselib                      = ['QTANGLE',
                                       'QTMAIN',
                                       'QT5CORE',
                                       'QT5GUI',
                                       'QT5OPENGL',
                                       'QT5NETWORK',
                                       'QT5SVG',
                                       'QT5WIDGETS',
                                       'D3D_COMPILER_47'],

        defines                 = [ 'UNICODE', 'WOODPECKER_ENABLE_PROFILER' ],

        # Platform Specific
        msvc_cxxflags           = [
            '/W4', # warning level
            ],
        darwin_uselib           = [ 'AWS_CPP_SDK_CORE',
                                    'AWS_CPP_SDK_COGNITO_IDENTITY',
                                    'AWS_CPP_SDK_MOBILEANALYTICS',
                                    'AWS_CPP_SDK_IDENTITY_MANAGEMENT' ],
        darwin_rpath    =         ['@executable_path', '@executable_path/qtlibs/lib'],
        darwin_frameworkpath    = [bld.ThirdPartyPath('qt', 'clang_64/lib')],
        clang_cxxflags          = [
            '-Wno-writable-strings',
            ],

        win_lib =[ 'shell32' ]
    )
