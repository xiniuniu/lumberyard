########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################

from waflib.TaskGen import extension

########################################################################################
#
#
# This wscript generates the following multiple targets:
#   * AzQtComponents - a shared library for the main LY Editor and plugins
#   * AmazonStyle executable - an (deprecated) executable to showcase the above library
#   * AmazonQtControlGallery - an executable to showcase the above library
#
########################################################################################


def build(bld):

    # using CryPipelineModule here, to prevent it from being linked monolithically in release builds.
    bld.CryPipelineModule(
        target           = 'AzQtComponents',

        vs_filter        = 'AZ Framework/AzQtComponents',

        file_list        = ['azqtcomponents.waf_files'],
        win_file_list    = ['azqtcomponents_win.waf_files'],
        darwin_file_list = ['azqtcomponents_darwin.waf_files'],

        platforms        = ['win', 'darwin'],
        configurations   = ['all'],
        disable_pch      = True,
        features         = ['qt5', 'link_running_program', 'crcfix'],
        uselib           = ['QT5CORE','QT5GUI','QT5WIDGETS','QT5XML', 'QT5WINEXTRAS', 'QT5MACEXTRAS'],
        use              = ['AzFramework'],
        includes         = ['..', '../../AzToolsFramework'],
        export_includes  = ['..'],

        # Note that for some of the high dpi and SHAppBarMessage/ABM_GETAUTOHIDEBAREX stuff for the title bars, we require a WINNT version of 602
        # This define does not need to be exported to any other module and won't affect our header files being included
        win_defines      = ['WIN64', 'NOMINMAX', '_WIN32_WINNT=0x602'],

        win_lib          = ['User32', 'Shell32', 'Gdi32', 'Magnification'],

        msvc_cxxflags    = [
            '/W4', # warning level
            '/wd4127', # warning caused by QVector and QRect; disabling in this project because it's not useful
            '/wd4351', # warning caused by QVector and QPainter; disabling in this project because it's not useful
        ],
        clang_cxxflags   = [
            '-Werror', # warnings as errors
            '-Wall' # warning level
        ],

        darwin_enable_rtti = True,

        defines            = ['QT_QML_DEBUG', 'AZ_QT_COMPONENTS_EXPORT_SYMBOLS'],

        # Testing
        test_all_file_list = ['azqtcomponents_testing.waf_files']

    )

    bld.LumberyardApp(
        target          = 'AmazonStyle',
        file_list       = ['azqtcomponents_style.waf_files'],
        platforms       = ['win', 'darwin'],
        configurations  = ['all'],
        exclude_monolithic = True,
        vs_filter       = 'AZ Framework/AzQtComponents/Deprecated',

        use             = ['AzQtComponents'],
        includes        = [bld.Path('Code/Framework/AzQtComponents'), bld.Path('Code/Framework/AzQtComponents/AzQtComponents/StyleGallery')],

        features        = ['qt5'],

        uselib          = ['QT5CORE', 'QT5GUI', 'QT5WIDGETS'],

        darwin_rpath    = ['@executable_path', '@executable_path/qtlibs/lib'],
    )

    # for the moment, only build the AmazonQtControlGallery when doing a non-release build
    # It's for internal consumption only, at this point
    version = bld.get_lumberyard_version()
    if version == "0.0.0.0":
        bld.LumberyardApp(
            target          = 'AmazonQtControlGallery',
            file_list       = ['azqtcomponents_gallery.waf_files'],
            platforms       = ['win', 'darwin'],
            configurations  = ['debug_all', 'profile_all'],
            vs_filter       = 'AZ Framework/AzQtComponents',

            use             = ['AzQtComponents', 'AzToolsFramework'],
            includes        = [bld.Path('Code/Framework/AzQtComponents'), bld.Path('Code/Framework/AzQtComponents/AzQtComponents/Gallery'), bld.Path('Code/Framework/AzToolsFramework')],

            features        = ['qt5'],

            uselib          = ['QT5CORE', 'QT5GUI', 'QT5WIDGETS', 'QT5SVG'],

            darwin_rpath    = ['@executable_path', '@executable_path/qtlibs/lib']
        )

# make qss and ini files show up in generated projects, but don't process them as part of the build
@extension('.qss')
@extension('.ini')
def style_file_dummy(tgen,node):
    pass
